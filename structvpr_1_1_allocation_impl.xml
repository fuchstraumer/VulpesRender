<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structvpr_1_1_allocation_impl" kind="struct" language="C++" prot="public">
    <compoundname>vpr::AllocationImpl</compoundname>
    <innerclass refid="structvpr_1_1_allocation_impl_1_1block_allocation" prot="public">vpr::AllocationImpl::blockAllocation</innerclass>
    <innerclass refid="structvpr_1_1_allocation_impl_1_1private_allocation" prot="public">vpr::AllocationImpl::privateAllocation</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvpr_1_1_allocation_impl_1ad3d64eb7085a475c1d1e30ba67bcbbe0" prot="public" static="no" mutable="no">
        <type>std::variant&lt; <ref refid="structvpr_1_1_allocation_impl_1_1block_allocation" kindref="compound">blockAllocation</ref>, <ref refid="structvpr_1_1_allocation_impl_1_1private_allocation" kindref="compound">privateAllocation</ref> &gt;</type>
        <definition>std::variant&lt;blockAllocation, privateAllocation&gt; vpr::AllocationImpl::typeData</definition>
        <argsstring></argsstring>
        <name>typeData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Allocation.cpp" line="32" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_allocation_impl_1a8726eee1d9dd5e9641fa5979162a7d86" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* vpr::AllocationImpl::userData</definition>
        <argsstring></argsstring>
        <name>userData</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Allocation.cpp" line="34" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvpr_1_1_allocation_impl_1a21c46d4aa8a786c4358a9e20256e3c9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vpr::AllocationImpl::AllocationImpl</definition>
        <argsstring>()</argsstring>
        <name>AllocationImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Allocation.cpp" line="16" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="16" bodyend="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="alloc/src/Allocation.cpp" line="14" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="14" bodyend="35"/>
    <listofallmembers>
      <member refid="structvpr_1_1_allocation_impl_1a21c46d4aa8a786c4358a9e20256e3c9d" prot="public" virt="non-virtual"><scope>vpr::AllocationImpl</scope><name>AllocationImpl</name></member>
      <member refid="structvpr_1_1_allocation_impl_1ad3d64eb7085a475c1d1e30ba67bcbbe0" prot="public" virt="non-virtual"><scope>vpr::AllocationImpl</scope><name>typeData</name></member>
      <member refid="structvpr_1_1_allocation_impl_1a8726eee1d9dd5e9641fa5979162a7d86" prot="public" virt="non-virtual"><scope>vpr::AllocationImpl</scope><name>userData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
