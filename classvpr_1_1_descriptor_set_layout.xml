<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classvpr_1_1_descriptor_set_layout" kind="class" language="C++" prot="public">
    <compoundname>vpr::DescriptorSetLayout</compoundname>
    <includes refid="_descriptor_set_layout_8hpp" local="no">DescriptorSetLayout.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvpr_1_1_descriptor_set_layout_1ae47b4f4a55fcc84ecaaa2b7dc18b7f43" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool vpr::DescriptorSetLayout::ready</definition>
        <argsstring></argsstring>
        <name>ready</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="39" column="1" bodyfile="resource/include/DescriptorSetLayout.hpp" bodystart="39" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" compoundref="_descriptor_set_layout_8cpp" startline="60" endline="75">create</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" compoundref="_descriptor_set_layout_8cpp" startline="53" endline="58">vkHandle</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_descriptor_set_layout_1a5f778734388912af4202bd741f648d99" prot="private" static="no" mutable="no">
        <type>VkDevice</type>
        <definition>VkDevice vpr::DescriptorSetLayout::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="40" column="1" bodyfile="resource/include/DescriptorSetLayout.hpp" bodystart="40" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" compoundref="_descriptor_set_layout_8cpp" startline="60" endline="75">create</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1ad1d8e86cd2660799258dcc5d077d3b04" compoundref="_descriptor_set_layout_8cpp" startline="15" endline="19">~DescriptorSetLayout</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_descriptor_set_layout_1a0aae54b47212fc24031e7633ab7ae04d" prot="private" static="no" mutable="yes">
        <type>VkDescriptorSetLayout</type>
        <definition>VkDescriptorSetLayout vpr::DescriptorSetLayout::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="41" column="1" bodyfile="resource/include/DescriptorSetLayout.hpp" bodystart="41" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" compoundref="_descriptor_set_layout_8cpp" startline="60" endline="75">create</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" compoundref="_descriptor_set_layout_8cpp" startline="53" endline="58">vkHandle</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1ad1d8e86cd2660799258dcc5d077d3b04" compoundref="_descriptor_set_layout_8cpp" startline="15" endline="19">~DescriptorSetLayout</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_descriptor_set_layout_1aed5ff96a518362d581fd44e44f5e4ddd" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvpr_1_1_layout_bindings" kindref="compound">LayoutBindings</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LayoutBindings&gt; vpr::DescriptorSetLayout::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="42" column="1" bodyfile="resource/include/DescriptorSetLayout.hpp" bodystart="42" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1aa0e6847616bb3254e7650f4e67762f82" compoundref="_descriptor_set_layout_8cpp" startline="44" endline="46">AddDescriptorBinding</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1acbf6dcb13b21c4b2b3d65301c452a919" compoundref="_descriptor_set_layout_8cpp" startline="48" endline="52">AddDescriptorBindings</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" compoundref="_descriptor_set_layout_8cpp" startline="60" endline="75">create</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1a4d1f8d5ced9cf60a6e61765e822cb8bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::DescriptorSetLayout::DescriptorSetLayout</definition>
        <argsstring>(const DescriptorSetLayout &amp;)=delete</argsstring>
        <name>DescriptorSetLayout</name>
        <param>
          <type>const <ref refid="classvpr_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1af24634c627f1b4fe1bfa0207f3e704a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref> &amp;</type>
        <definition>DescriptorSetLayout&amp; vpr::DescriptorSetLayout::operator=</definition>
        <argsstring>(const DescriptorSetLayout &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvpr_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::DescriptorSetLayout::create</definition>
        <argsstring>() const</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="38" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="60" bodyend="75"/>
        <references refid="classvpr_1_1_descriptor_set_layout_1aed5ff96a518362d581fd44e44f5e4ddd" compoundref="_descriptor_set_layout_8hpp" startline="42">data</references>
        <references refid="classvpr_1_1_descriptor_set_layout_1a5f778734388912af4202bd741f648d99" compoundref="_descriptor_set_layout_8hpp" startline="40">device</references>
        <references refid="classvpr_1_1_descriptor_set_layout_1a0aae54b47212fc24031e7633ab7ae04d" compoundref="_descriptor_set_layout_8hpp" startline="41">handle</references>
        <references refid="classvpr_1_1_descriptor_set_layout_1ae47b4f4a55fcc84ecaaa2b7dc18b7f43" compoundref="_descriptor_set_layout_8hpp" startline="39">ready</references>
        <references refid="namespacevpr_1a400d661ec0f10c8a6308ad0497de9ec6" compoundref="_create_info_base_8hpp" startline="506">vpr::vk_descriptor_set_layout_create_info_base</references>
        <references refid="vk_assert_8hpp_1a92c2e07b0d021fc331be70a65c61dacc" compoundref="vk_assert_8hpp" startline="9">VkAssert</references>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" compoundref="_descriptor_set_layout_8cpp" startline="53" endline="58">vkHandle</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1aba3a23a9cfdc3283b2d6cd960ac5c742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::DescriptorSetLayout::DescriptorSetLayout</definition>
        <argsstring>(const VkDevice &amp;_dvc)</argsstring>
        <name>DescriptorSetLayout</name>
        <param>
          <type>const VkDevice &amp;</type>
          <declname>_dvc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="24" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1ad1d8e86cd2660799258dcc5d077d3b04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::DescriptorSetLayout::~DescriptorSetLayout</definition>
        <argsstring>()</argsstring>
        <name>~DescriptorSetLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="25" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="15" bodyend="19"/>
        <references refid="classvpr_1_1_descriptor_set_layout_1a5f778734388912af4202bd741f648d99" compoundref="_descriptor_set_layout_8hpp" startline="40">device</references>
        <references refid="classvpr_1_1_descriptor_set_layout_1a0aae54b47212fc24031e7633ab7ae04d" compoundref="_descriptor_set_layout_8hpp" startline="41">handle</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1a1e102bd62e56ce8ed6befe9f0589cf4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::DescriptorSetLayout::DescriptorSetLayout</definition>
        <argsstring>(DescriptorSetLayout &amp;&amp;other) noexcept</argsstring>
        <name>DescriptorSetLayout</name>
        <param>
          <type><ref refid="classvpr_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="26" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1a5000286a06dc67a0e2d398129644240c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref> &amp;</type>
        <definition>DescriptorSetLayout &amp; vpr::DescriptorSetLayout::operator=</definition>
        <argsstring>(DescriptorSetLayout &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvpr_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="27" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="24" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1a4ba5ab9264f33503e4844262f7e6cc22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::DescriptorSetLayout::AddDescriptorBinding</definition>
        <argsstring>(const VkDescriptorType &amp;descriptor_type, const VkShaderStageFlags &amp;shader_stage, const uint32_t &amp;descriptor_binding_loc) noexcept</argsstring>
        <name>AddDescriptorBinding</name>
        <param>
          <type>const VkDescriptorType &amp;</type>
          <declname>descriptor_type</declname>
        </param>
        <param>
          <type>const VkShaderStageFlags &amp;</type>
          <declname>shader_stage</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>descriptor_binding_loc</declname>
        </param>
        <briefdescription>
<para>Specifies that a descriptor of the given type be accessible from the given stage, and sets the index it will be accessed at in the shader. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="30" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1aa0e6847616bb3254e7650f4e67762f82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::DescriptorSetLayout::AddDescriptorBinding</definition>
        <argsstring>(const VkDescriptorSetLayoutBinding &amp;binding)</argsstring>
        <name>AddDescriptorBinding</name>
        <param>
          <type>const VkDescriptorSetLayoutBinding &amp;</type>
          <declname>binding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="31" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="44" bodyend="46"/>
        <references refid="classvpr_1_1_descriptor_set_layout_1aed5ff96a518362d581fd44e44f5e4ddd" compoundref="_descriptor_set_layout_8hpp" startline="42">data</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1acbf6dcb13b21c4b2b3d65301c452a919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::DescriptorSetLayout::AddDescriptorBindings</definition>
        <argsstring>(const uint32_t num_bindings, const VkDescriptorSetLayoutBinding *bindings)</argsstring>
        <name>AddDescriptorBindings</name>
        <param>
          <type>const uint32_t</type>
          <declname>num_bindings</declname>
        </param>
        <param>
          <type>const VkDescriptorSetLayoutBinding *</type>
          <declname>bindings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="32" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="48" bodyend="52"/>
        <references refid="classvpr_1_1_descriptor_set_layout_1aed5ff96a518362d581fd44e44f5e4ddd" compoundref="_descriptor_set_layout_8hpp" startline="42">data</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkDescriptorSetLayout &amp;</type>
        <definition>const VkDescriptorSetLayout &amp; vpr::DescriptorSetLayout::vkHandle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>vkHandle</name>
        <briefdescription>
<para>Calling <ref refid="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" kindref="member">vkHandle()</ref> on this object will create the object if it is not already ready for use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/DescriptorSetLayout.hpp" line="35" column="1" bodyfile="resource/src/DescriptorSetLayout.cpp" bodystart="53" bodyend="58"/>
        <references refid="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" compoundref="_descriptor_set_layout_8cpp" startline="60" endline="75">create</references>
        <references refid="classvpr_1_1_descriptor_set_layout_1a0aae54b47212fc24031e7633ab7ae04d" compoundref="_descriptor_set_layout_8hpp" startline="41">handle</references>
        <references refid="classvpr_1_1_descriptor_set_layout_1ae47b4f4a55fcc84ecaaa2b7dc18b7f43" compoundref="_descriptor_set_layout_8hpp" startline="39">ready</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple wrapper around the VkDescriptorSetLayout object. </para>    </briefdescription>
    <detaileddescription>
<para>No explicit construction function: it is created when it is first used by calling <ref refid="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" kindref="member">vkHandle()</ref>. Make sure to add bindings before calling <ref refid="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" kindref="member">vkHandle()</ref>, however, as I believe an empty set won&apos;t break anything but the validation layers should give warnings or errors if it&apos;s not done for valid reasons.</para><para>Empty sets can be required if you have shaders that use descriptors at bindings 1 and 3, for example, as you will still then need to pass an array of 3 set layouts to the function for binding descriptor sets. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="174">
        <label>vpr::LayoutBindings</label>
        <link refid="structvpr_1_1_layout_bindings"/>
        <childnode refid="175" relation="usage">
          <edgelabel>bindings</edgelabel>
        </childnode>
      </node>
      <node id="175">
        <label>std::map&lt; size_t, VkDescriptorSetLayoutBinding &gt;</label>
      </node>
      <node id="172">
        <label>vpr::DescriptorSetLayout</label>
        <link refid="classvpr_1_1_descriptor_set_layout"/>
        <childnode refid="173" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="173">
        <label>std::unique_ptr&lt; vpr::LayoutBindings &gt;</label>
        <childnode refid="174" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="resource/include/DescriptorSetLayout.hpp" line="19" column="1" bodyfile="resource/include/DescriptorSetLayout.hpp" bodystart="19" bodyend="43"/>
    <listofallmembers>
      <member refid="classvpr_1_1_descriptor_set_layout_1a4ba5ab9264f33503e4844262f7e6cc22" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>AddDescriptorBinding</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1aa0e6847616bb3254e7650f4e67762f82" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>AddDescriptorBinding</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1acbf6dcb13b21c4b2b3d65301c452a919" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>AddDescriptorBindings</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" prot="private" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>create</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1aed5ff96a518362d581fd44e44f5e4ddd" prot="private" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>data</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1a4d1f8d5ced9cf60a6e61765e822cb8bb" prot="private" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>DescriptorSetLayout</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1aba3a23a9cfdc3283b2d6cd960ac5c742" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>DescriptorSetLayout</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1a1e102bd62e56ce8ed6befe9f0589cf4b" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>DescriptorSetLayout</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1a5f778734388912af4202bd741f648d99" prot="private" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>device</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1a0aae54b47212fc24031e7633ab7ae04d" prot="private" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>handle</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1af24634c627f1b4fe1bfa0207f3e704a0" prot="private" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1a5000286a06dc67a0e2d398129644240c" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1ae47b4f4a55fcc84ecaaa2b7dc18b7f43" prot="private" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>ready</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1ac798e1138e8a7a380653b27fe7e06058" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>vkHandle</name></member>
      <member refid="classvpr_1_1_descriptor_set_layout_1ad1d8e86cd2660799258dcc5d077d3b04" prot="public" virt="non-virtual"><scope>vpr::DescriptorSetLayout</scope><name>~DescriptorSetLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
