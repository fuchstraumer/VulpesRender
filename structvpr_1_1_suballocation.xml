<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structvpr_1_1_suballocation" kind="struct" language="C++" prot="public">
    <compoundname>vpr::Suballocation</compoundname>
    <includes refid="_suballocation_8hpp" local="no">Suballocation.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvpr_1_1_suballocation_1ab65ef9ae13c57aee65403240ff1aa0ac" prot="public" static="no" mutable="no">
        <type>VkDeviceSize</type>
        <definition>VkDeviceSize vpr::Suballocation::Offset</definition>
        <argsstring></argsstring>
        <name>Offset</name>
        <initializer>{ std::numeric_limits&lt;VkDeviceSize&gt;::max() }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Suballocation.hpp" line="26" column="1" bodyfile="alloc/src/Suballocation.hpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="structvpr_1_1_suballocation_1a78bbba6098426eb4c463b630a767bf2a" compoundref="_suballocation_8hpp" startline="29" endline="31">operator&lt;</referencedby>
        <referencedby refid="classvpr_1_1_memory_block_1ac05d7c8692b9d305726c1d948a3ec6d9" compoundref="_memory_block_8cpp" startline="145" endline="229">vpr::MemoryBlock::Validate</referencedby>
        <referencedby refid="classvpr_1_1_memory_block_1a3eb796b49ef07360203e2fe8c099809b" compoundref="_memory_block_8cpp" startline="268" endline="348">vpr::MemoryBlock::VerifySuballocation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_suballocation_1a692b3dfe078a5d701bbdda192d6cf4c8" prot="public" static="no" mutable="no">
        <type>VkDeviceSize</type>
        <definition>VkDeviceSize vpr::Suballocation::Size</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <initializer>{ std::numeric_limits&lt;VkDeviceSize&gt;::max() }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Suballocation.hpp" line="27" column="1" bodyfile="alloc/src/Suballocation.hpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_memory_block_1a3aa9297d61b2cd0d71588c7bf8e7b47e" compoundref="_memory_block_8cpp" startline="497" endline="534">vpr::MemoryBlock::freeSuballocation</referencedby>
        <referencedby refid="classvpr_1_1_memory_block_1ac05d7c8692b9d305726c1d948a3ec6d9" compoundref="_memory_block_8cpp" startline="145" endline="229">vpr::MemoryBlock::Validate</referencedby>
        <referencedby refid="classvpr_1_1_memory_block_1a3eb796b49ef07360203e2fe8c099809b" compoundref="_memory_block_8cpp" startline="268" endline="348">vpr::MemoryBlock::VerifySuballocation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_suballocation_1aa49dd78d1314b7176aa078b8c110cc9b" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevpr_1a729c04888e8a0b67bdb473c36221615e" kindref="member">SuballocationType</ref></type>
        <definition>SuballocationType vpr::Suballocation::Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <initializer>{ <ref refid="namespacevpr_1a494552c6fdda99313008c4a5e61a79fca88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">SuballocationType::Unknown</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Suballocation.hpp" line="28" column="1" bodyfile="alloc/src/Suballocation.hpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_memory_block_1a3aa9297d61b2cd0d71588c7bf8e7b47e" compoundref="_memory_block_8cpp" startline="497" endline="534">vpr::MemoryBlock::freeSuballocation</referencedby>
        <referencedby refid="classvpr_1_1_memory_block_1ac05d7c8692b9d305726c1d948a3ec6d9" compoundref="_memory_block_8cpp" startline="145" endline="229">vpr::MemoryBlock::Validate</referencedby>
        <referencedby refid="classvpr_1_1_memory_block_1a3eb796b49ef07360203e2fe8c099809b" compoundref="_memory_block_8cpp" startline="268" endline="348">vpr::MemoryBlock::VerifySuballocation</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvpr_1_1_suballocation_1a78bbba6098426eb4c463b630a767bf2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vpr::Suballocation::operator&lt;</definition>
        <argsstring>(const Suballocation &amp;other) const noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structvpr_1_1_suballocation" kindref="compound">Suballocation</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Suballocation.hpp" line="29" column="1" bodyfile="alloc/src/Suballocation.hpp" bodystart="29" bodyend="31"/>
        <references refid="structvpr_1_1_suballocation_1ab65ef9ae13c57aee65403240ff1aa0ac" compoundref="_suballocation_8hpp" startline="26">Offset</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>During the process of finding a suitable region to bind to, we need to store things like &quot;SuballocationType&quot;, which helps keep track of the precise kind of memory we are looking for and lets us know if its optimally/linearly tiled. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="alloc/src/Suballocation.hpp" line="25" column="1" bodyfile="alloc/src/Suballocation.hpp" bodystart="25" bodyend="32"/>
    <listofallmembers>
      <member refid="structvpr_1_1_suballocation_1ab65ef9ae13c57aee65403240ff1aa0ac" prot="public" virt="non-virtual"><scope>vpr::Suballocation</scope><name>Offset</name></member>
      <member refid="structvpr_1_1_suballocation_1a78bbba6098426eb4c463b630a767bf2a" prot="public" virt="non-virtual"><scope>vpr::Suballocation</scope><name>operator&lt;</name></member>
      <member refid="structvpr_1_1_suballocation_1a692b3dfe078a5d701bbdda192d6cf4c8" prot="public" virt="non-virtual"><scope>vpr::Suballocation</scope><name>Size</name></member>
      <member refid="structvpr_1_1_suballocation_1aa49dd78d1314b7176aa078b8c110cc9b" prot="public" virt="non-virtual"><scope>vpr::Suballocation</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
