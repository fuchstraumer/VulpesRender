<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classvpr_1_1_surface_k_h_r" kind="class" language="C++" prot="public">
    <compoundname>vpr::SurfaceKHR</compoundname>
    <includes refid="_surface_k_h_r_8hpp" local="no">SurfaceKHR.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvpr_1_1_surface_k_h_r_1af873c95e506396d5c140203cc421d5c3" prot="private" static="no" mutable="no">
        <type>GLFWwindow *</type>
        <definition>GLFWwindow* vpr::SurfaceKHR::window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="41" column="1" bodyfile="core/include/SurfaceKHR.hpp" bodystart="41" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">create</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_surface_k_h_r_1ad66bb54b8638a025ea3adadffeb0cf22" prot="private" static="no" mutable="no">
        <type>const <ref refid="classvpr_1_1_instance" kindref="compound">Instance</ref> *</type>
        <definition>const Instance* vpr::SurfaceKHR::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="45" column="1" bodyfile="core/include/SurfaceKHR.hpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">create</referencedby>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a1083d46de78e533a1cabba07b62e1950" compoundref="_surface_k_h_r_8cpp" startline="72" endline="77">destroy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_surface_k_h_r_1afd00bb9d80680f5f52ebbb1bf3f8858b" prot="private" static="no" mutable="no">
        <type>VkPhysicalDevice</type>
        <definition>VkPhysicalDevice vpr::SurfaceKHR::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="46" column="1" bodyfile="core/include/SurfaceKHR.hpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">create</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_surface_k_h_r_1a06a6277b08e3a4733de323b2e2c9a3d9" prot="private" static="no" mutable="no">
        <type>VkSurfaceKHR</type>
        <definition>VkSurfaceKHR vpr::SurfaceKHR::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="47" column="1" bodyfile="core/include/SurfaceKHR.hpp" bodystart="47" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">create</referencedby>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a1083d46de78e533a1cabba07b62e1950" compoundref="_surface_k_h_r_8cpp" startline="72" endline="77">destroy</referencedby>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a07171777b06b36cb0e6874cdcb2f9e4e" compoundref="_surface_k_h_r_8cpp" startline="44" endline="46">vkHandle</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1a808e0928d34255a1cbe80f963c0f92de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::SurfaceKHR::SurfaceKHR</definition>
        <argsstring>(const SurfaceKHR &amp;)=delete</argsstring>
        <name>SurfaceKHR</name>
        <param>
          <type>const <ref refid="classvpr_1_1_surface_k_h_r" kindref="compound">SurfaceKHR</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1aef09d838497579b7e069da3f543cc865" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_surface_k_h_r" kindref="compound">SurfaceKHR</ref> &amp;</type>
        <definition>SurfaceKHR&amp; vpr::SurfaceKHR::operator=</definition>
        <argsstring>(const SurfaceKHR &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvpr_1_1_surface_k_h_r" kindref="compound">SurfaceKHR</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::SurfaceKHR::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="38" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="49" bodyend="55"/>
        <references refid="classvpr_1_1_surface_k_h_r_1afd00bb9d80680f5f52ebbb1bf3f8858b" compoundref="_surface_k_h_r_8hpp" startline="46">device</references>
        <references refid="classvpr_1_1_surface_k_h_r_1a06a6277b08e3a4733de323b2e2c9a3d9" compoundref="_surface_k_h_r_8hpp" startline="47">handle</references>
        <references refid="classvpr_1_1_surface_k_h_r_1ad66bb54b8638a025ea3adadffeb0cf22" compoundref="_surface_k_h_r_8hpp" startline="45">parent</references>
        <references refid="classvpr_1_1_surface_k_h_r_1a0ef5949ff27a03d9281576b1b5c99c35" compoundref="_surface_k_h_r_8cpp" startline="79" endline="89">VerifyPresentationSupport</references>
        <references refid="vk_assert_8hpp_1a92c2e07b0d021fc331be70a65c61dacc" compoundref="vk_assert_8hpp" startline="9">VkAssert</references>
        <references refid="classvpr_1_1_instance_1a6082a006a3f2ab9688d4a14c123cb04a" compoundref="_instance_8cpp" startline="104" endline="106">vpr::Instance::vkHandle</references>
        <references refid="classvpr_1_1_surface_k_h_r_1af873c95e506396d5c140203cc421d5c3" compoundref="_surface_k_h_r_8hpp" startline="41">window</references>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a35b9db127a998f70bea3ebbdeef97f5d" compoundref="_surface_k_h_r_8cpp" startline="39" endline="42">Recreate</referencedby>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1ad0b2ade9a2c234a86f9f465de183c7ea" compoundref="_surface_k_h_r_8cpp" startline="20" endline="22">SurfaceKHR</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1a1083d46de78e533a1cabba07b62e1950" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::SurfaceKHR::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="39" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="72" bodyend="77"/>
        <references refid="classvpr_1_1_surface_k_h_r_1a06a6277b08e3a4733de323b2e2c9a3d9" compoundref="_surface_k_h_r_8hpp" startline="47">handle</references>
        <references refid="classvpr_1_1_surface_k_h_r_1ad66bb54b8638a025ea3adadffeb0cf22" compoundref="_surface_k_h_r_8hpp" startline="45">parent</references>
        <references refid="classvpr_1_1_instance_1a6082a006a3f2ab9688d4a14c123cb04a" compoundref="_instance_8cpp" startline="104" endline="106">vpr::Instance::vkHandle</references>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a35b9db127a998f70bea3ebbdeef97f5d" compoundref="_surface_k_h_r_8cpp" startline="39" endline="42">Recreate</referencedby>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1ae87cbdf79cb326650e1b146f53d6d394" compoundref="_surface_k_h_r_8cpp" startline="35" endline="37">~SurfaceKHR</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1ad0b2ade9a2c234a86f9f465de183c7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::SurfaceKHR::SurfaceKHR</definition>
        <argsstring>(const Instance *_parent, VkPhysicalDevice physical_device, void *window)</argsstring>
        <name>SurfaceKHR</name>
        <param>
          <type>const <ref refid="classvpr_1_1_instance" kindref="compound">Instance</ref> *</type>
          <declname>_parent</declname>
        </param>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>physical_device</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Initializes a new surface KHR for the given instance given the parameters. </para>        </briefdescription>
        <detaileddescription>
<para>Hosted by the specified physical_device. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>Is either a GLFWwindow pointer, or an ANativeWindow pointer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="23" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="20" bodyend="22"/>
        <references refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">create</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1a1db33f16a86859208e7d4ccf17c68efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::SurfaceKHR::SurfaceKHR</definition>
        <argsstring>(SurfaceKHR &amp;&amp;other) noexcept</argsstring>
        <name>SurfaceKHR</name>
        <param>
          <type><ref refid="classvpr_1_1_surface_k_h_r" kindref="compound">SurfaceKHR</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="24" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1afd9e871893d9acb3222df476dc6f3f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_surface_k_h_r" kindref="compound">SurfaceKHR</ref> &amp;</type>
        <definition>SurfaceKHR &amp; vpr::SurfaceKHR::operator=</definition>
        <argsstring>(SurfaceKHR &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvpr_1_1_surface_k_h_r" kindref="compound">SurfaceKHR</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="25" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1ae87cbdf79cb326650e1b146f53d6d394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::SurfaceKHR::~SurfaceKHR</definition>
        <argsstring>()</argsstring>
        <name>~SurfaceKHR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="26" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="35" bodyend="37"/>
        <references refid="classvpr_1_1_surface_k_h_r_1a1083d46de78e533a1cabba07b62e1950" compoundref="_surface_k_h_r_8cpp" startline="72" endline="77">destroy</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1a35b9db127a998f70bea3ebbdeef97f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::SurfaceKHR::Recreate</definition>
        <argsstring>()</argsstring>
        <name>Recreate</name>
        <briefdescription>
<para>Destroys then properly re-creates this surface. </para>        </briefdescription>
        <detaileddescription>
<para>Required as part of a swapchain recreation event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="28" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="39" bodyend="42"/>
        <references refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">create</references>
        <references refid="classvpr_1_1_surface_k_h_r_1a1083d46de78e533a1cabba07b62e1950" compoundref="_surface_k_h_r_8cpp" startline="72" endline="77">destroy</references>
        <referencedby refid="group___core_1ga812ad3570ad63ddcbc18e03988bd60bd" compoundref="_swapchain_8cpp" startline="391" endline="395">vpr::RecreateSwapchainAndSurface</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1a07171777b06b36cb0e6874cdcb2f9e4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkSurfaceKHR &amp;</type>
        <definition>const VkSurfaceKHR &amp; vpr::SurfaceKHR::vkHandle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>vkHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="30" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="44" bodyend="46"/>
        <references refid="classvpr_1_1_surface_k_h_r_1a06a6277b08e3a4733de323b2e2c9a3d9" compoundref="_surface_k_h_r_8hpp" startline="47">handle</references>
        <referencedby refid="group___core_1ga812ad3570ad63ddcbc18e03988bd60bd" compoundref="_swapchain_8cpp" startline="391" endline="395">vpr::RecreateSwapchainAndSurface</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvpr_1_1_surface_k_h_r_1a0ef5949ff27a03d9281576b1b5c99c35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkBool32</type>
        <definition>VkBool32 vpr::SurfaceKHR::VerifyPresentationSupport</definition>
        <argsstring>(VkPhysicalDevice physical_device, VkSurfaceKHR surface)</argsstring>
        <name>VerifyPresentationSupport</name>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>physical_device</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>This function must be called once before presenting to a surface using a physical device, or the validation layers will throw warnings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/SurfaceKHR.hpp" line="34" column="1" bodyfile="core/src/SurfaceKHR.cpp" bodystart="79" bodyend="89"/>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">create</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The bare-minimum required to wrap a VkSurfaceKHR object. </para>    </briefdescription>
    <detaileddescription>
<para>Uses the glfwCreateWindowSurface function to handle the various platform-specific details that would change otherwise. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="335">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="331">
        <label>vpr::InstanceExtensionHandler</label>
        <link refid="structvpr_1_1_instance_extension_handler"/>
        <childnode refid="332" relation="usage">
          <edgelabel>extensionStrings</edgelabel>
        </childnode>
        <childnode refid="333" relation="usage">
          <edgelabel>copiedExtensionStrings</edgelabel>
        </childnode>
      </node>
      <node id="333">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="334" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="329">
        <label>vpr::SurfaceKHR</label>
        <link refid="classvpr_1_1_surface_k_h_r"/>
        <childnode refid="330" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="330">
        <label>vpr::Instance</label>
        <link refid="classvpr_1_1_instance"/>
        <childnode refid="331" relation="usage">
          <edgelabel>extensionHandler</edgelabel>
        </childnode>
      </node>
      <node id="332">
        <label>std::vector&lt; const char *&gt;</label>
      </node>
      <node id="334">
        <label>std::string</label>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="core/include/SurfaceKHR.hpp" line="15" column="1" bodyfile="core/include/SurfaceKHR.hpp" bodystart="15" bodyend="48"/>
    <listofallmembers>
      <member refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>create</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1a1083d46de78e533a1cabba07b62e1950" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>destroy</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1afd00bb9d80680f5f52ebbb1bf3f8858b" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>device</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1a06a6277b08e3a4733de323b2e2c9a3d9" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>handle</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1aef09d838497579b7e069da3f543cc865" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1afd9e871893d9acb3222df476dc6f3f98" prot="public" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1ad66bb54b8638a025ea3adadffeb0cf22" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>parent</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1a35b9db127a998f70bea3ebbdeef97f5d" prot="public" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>Recreate</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1a808e0928d34255a1cbe80f963c0f92de" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>SurfaceKHR</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1ad0b2ade9a2c234a86f9f465de183c7ea" prot="public" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>SurfaceKHR</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1a1db33f16a86859208e7d4ccf17c68efa" prot="public" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>SurfaceKHR</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1a0ef5949ff27a03d9281576b1b5c99c35" prot="public" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>VerifyPresentationSupport</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1a07171777b06b36cb0e6874cdcb2f9e4e" prot="public" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>vkHandle</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1af873c95e506396d5c140203cc421d5c3" prot="private" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>window</name></member>
      <member refid="classvpr_1_1_surface_k_h_r_1ae87cbdf79cb326650e1b146f53d6d394" prot="public" virt="non-virtual"><scope>vpr::SurfaceKHR</scope><name>~SurfaceKHR</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
