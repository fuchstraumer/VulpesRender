<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classvpr_1_1_swapchain" kind="class" language="C++" prot="public">
    <compoundname>vpr::Swapchain</compoundname>
    <includes refid="_swapchain_8hpp" local="no">Swapchain.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvpr_1_1_swapchain_impl" kindref="compound">SwapchainImpl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;SwapchainImpl&gt; vpr::Swapchain::impl</definition>
        <argsstring></argsstring>
        <name>impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="65" column="1" bodyfile="core/include/Swapchain.hpp" bodystart="65" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_swapchain_1ae8f6f36da764662b8aabf33093299d8d" compoundref="_swapchain_8cpp" startline="379" endline="381">ColorFormat</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1a88583864a3d23a4049472e480562b539" compoundref="_swapchain_8cpp" startline="375" endline="377">ColorSpace</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1af29e2c4245bd5694afadc579783e5432" compoundref="_swapchain_8cpp" startline="359" endline="361">Destroy</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1a913d385f9a2a0e1d7c11c2bc04902411" compoundref="_swapchain_8cpp" startline="367" endline="369">Extent</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1a9bcbb78ab6b36c87830db08d48b7b255" compoundref="_swapchain_8cpp" startline="383" endline="385">Image</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1a19c9680de1214a5a3326ce77ee9a19b3" compoundref="_swapchain_8cpp" startline="371" endline="373">ImageCount</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1ae27fa9916dbadf5d8622772a9d7ca3c2" compoundref="_swapchain_8cpp" startline="387" endline="389">ImageView</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1a34c3d73db1e99d3a395398fc0dbb5dc6" compoundref="_swapchain_8cpp" startline="200" endline="205">Recreate</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1aeabe8989b29a1d38dd151160946c26fa" compoundref="_swapchain_8cpp" startline="363" endline="365">vkHandle</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1a2dc442a2b5f947c65a9be8278200faa6" compoundref="_swapchain_8cpp" startline="194" endline="198">~Swapchain</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a3e4ce83cae35d2eb7af80e56d67b6282" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::Swapchain::Swapchain</definition>
        <argsstring>(const Swapchain &amp;)=delete</argsstring>
        <name>Swapchain</name>
        <param>
          <type>const <ref refid="classvpr_1_1_swapchain" kindref="compound">Swapchain</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1abe10399ef8345a026c2888d0ae5f8376" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_swapchain" kindref="compound">Swapchain</ref> &amp;</type>
        <definition>Swapchain&amp; vpr::Swapchain::operator=</definition>
        <argsstring>(const Swapchain &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvpr_1_1_swapchain" kindref="compound">Swapchain</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="37" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a34fb7b3dfffa01d86b6f507ba0b27eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::Swapchain::Swapchain</definition>
        <argsstring>(const Device *_device, void *platform_window, VkSurfaceKHR surface, vertical_sync_mode sync_mode)</argsstring>
        <name>Swapchain</name>
        <param>
          <type>const <ref refid="classvpr_1_1_device" kindref="compound">Device</ref> *</type>
          <declname>_device</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>platform_window</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="group___core_1ga874ec16fda53668c022029810b30d344" kindref="member">vertical_sync_mode</ref></type>
          <declname>sync_mode</declname>
        </param>
        <briefdescription>
<para>Creates a new swapchain on the specified device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>platform_window</parametername>
</parameternamelist>
<parameterdescription>
<para>Is either a GLFWwindow pointer, or an ANativeWindow pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface this swapchain will be presenting images to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sync_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the potential vertical_sync_mode enum values specified what presentation mode to use. Defaults to mailbox. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="45" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a2dc442a2b5f947c65a9be8278200faa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::Swapchain::~Swapchain</definition>
        <argsstring>()</argsstring>
        <name>~Swapchain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="46" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="194" bodyend="198"/>
        <references refid="classvpr_1_1_swapchain_1af29e2c4245bd5694afadc579783e5432" compoundref="_swapchain_8cpp" startline="359" endline="361">Destroy</references>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a34c3d73db1e99d3a395398fc0dbb5dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::Swapchain::Recreate</definition>
        <argsstring>(VkSurfaceKHR surface)</argsstring>
        <name>Recreate</name>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>Required as part of a swapchain recreation event - must take a parameter to the new surface to use for the updated swapchain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="49" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="200" bodyend="205"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
        <referencedby refid="group___core_1ga812ad3570ad63ddcbc18e03988bd60bd" compoundref="_swapchain_8cpp" startline="391" endline="395">vpr::RecreateSwapchainAndSurface</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1af29e2c4245bd5694afadc579783e5432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::Swapchain::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="50" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="359" bodyend="361"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
        <referencedby refid="group___core_1ga812ad3570ad63ddcbc18e03988bd60bd" compoundref="_swapchain_8cpp" startline="391" endline="395">vpr::RecreateSwapchainAndSurface</referencedby>
        <referencedby refid="classvpr_1_1_swapchain_1a2dc442a2b5f947c65a9be8278200faa6" compoundref="_swapchain_8cpp" startline="194" endline="198">~Swapchain</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1aeabe8989b29a1d38dd151160946c26fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkSwapchainKHR &amp;</type>
        <definition>const VkSwapchainKHR &amp; vpr::Swapchain::vkHandle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>vkHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="52" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="363" bodyend="365"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a913d385f9a2a0e1d7c11c2bc04902411" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkExtent2D &amp;</type>
        <definition>const VkExtent2D &amp; vpr::Swapchain::Extent</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Extent</name>
        <briefdescription>
<para>Returns current extent of the swapchain. </para>        </briefdescription>
        <detaileddescription>
<para>Set based on platform window values - which are generally set before this object is created, or is set based on limits for the platform to satisfy initialization requirements. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="54" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="367" bodyend="369"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a19c9680de1214a5a3326ce77ee9a19b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const uint32_t &amp;</type>
        <definition>const uint32_t &amp; vpr::Swapchain::ImageCount</definition>
        <argsstring>() const noexcept</argsstring>
        <name>ImageCount</name>
        <briefdescription>
<para>Number of images this swapchain has created and expects to use during the rendering process. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="56" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="371" bodyend="373"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a88583864a3d23a4049472e480562b539" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkColorSpaceKHR &amp;</type>
        <definition>const VkColorSpaceKHR &amp; vpr::Swapchain::ColorSpace</definition>
        <argsstring>() const noexcept</argsstring>
        <name>ColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="57" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="375" bodyend="377"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1ae8f6f36da764662b8aabf33093299d8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkFormat &amp;</type>
        <definition>const VkFormat &amp; vpr::Swapchain::ColorFormat</definition>
        <argsstring>() const noexcept</argsstring>
        <name>ColorFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="58" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="379" bodyend="381"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1a9bcbb78ab6b36c87830db08d48b7b255" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkImage &amp;</type>
        <definition>const VkImage &amp; vpr::Swapchain::Image</definition>
        <argsstring>(const size_t &amp;idx) const</argsstring>
        <name>Image</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns handles to the implementation-created and managed backing images used for presentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="60" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="383" bodyend="385"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_swapchain_1ae27fa9916dbadf5d8622772a9d7ca3c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkImageView &amp;</type>
        <definition>const VkImageView &amp; vpr::Swapchain::ImageView</definition>
        <argsstring>(const size_t &amp;idx) const</argsstring>
        <name>ImageView</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns handles to the implementation-created and managed backing image views used for presentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/include/Swapchain.hpp" line="62" column="1" bodyfile="core/src/Swapchain.cpp" bodystart="387" bodyend="389"/>
        <references refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" compoundref="_swapchain_8hpp" startline="65">impl</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class abstracts away much of the detailed work and boilerplate code required to setup a swapchain in Vulkan. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classvpr_1_1_swapchain" kindref="compound">Swapchain</ref> recreation can be done by calling the suitable method, or by using the static method as well. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="340">
        <label>vpr::Device</label>
        <link refid="classvpr_1_1_device"/>
        <childnode refid="341" relation="usage">
          <edgelabel>dataMembers</edgelabel>
        </childnode>
        <childnode refid="347" relation="usage">
          <edgelabel>queueFamilyIndices</edgelabel>
        </childnode>
        <childnode refid="348" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="352" relation="usage">
          <edgelabel>debugUtilsHandler</edgelabel>
        </childnode>
        <childnode refid="353" relation="usage">
          <edgelabel>parentInstance</edgelabel>
        </childnode>
      </node>
      <node id="350">
        <label>vpr::PhysicalDeviceImpl</label>
        <link refid="classvpr_1_1_physical_device_impl"/>
        <childnode refid="351" relation="usage">
          <edgelabel>queueFamilyProperties</edgelabel>
        </childnode>
      </node>
      <node id="349">
        <label>std::unique_ptr&lt; vpr::PhysicalDeviceImpl &gt;</label>
        <childnode refid="350" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="347">
        <label>vpr::vkQueueFamilyIndices</label>
        <link refid="structvpr_1_1vk_queue_family_indices"/>
      </node>
      <node id="338">
        <label>std::unique_ptr&lt; vpr::SwapchainImpl &gt;</label>
        <childnode refid="339" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="355">
        <label>std::vector&lt; VkImage &gt;</label>
      </node>
      <node id="359">
        <label>std::vector&lt; VkPresentModeKHR &gt;</label>
      </node>
      <node id="341">
        <label>vpr::DeviceDataMembers</label>
        <link refid="structvpr_1_1_device_data_members"/>
        <childnode refid="340" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="342" relation="usage">
          <edgelabel>queueInfos</edgelabel>
        </childnode>
        <childnode refid="343" relation="usage">
          <edgelabel>enabledExtensions</edgelabel>
        </childnode>
        <childnode refid="344" relation="usage">
          <edgelabel>copiedExtensionStrings</edgelabel>
        </childnode>
      </node>
      <node id="346">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="358">
        <label>std::vector&lt; VkSurfaceFormatKHR &gt;</label>
      </node>
      <node id="339">
        <label>vpr::SwapchainImpl</label>
        <link refid="structvpr_1_1_swapchain_impl"/>
        <childnode refid="340" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="355" relation="usage">
          <edgelabel>images</edgelabel>
        </childnode>
        <childnode refid="356" relation="usage">
          <edgelabel>imageViews</edgelabel>
        </childnode>
        <childnode refid="357" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
      </node>
      <node id="354">
        <label>vpr::InstanceExtensionHandler</label>
        <link refid="structvpr_1_1_instance_extension_handler"/>
        <childnode refid="343" relation="usage">
          <edgelabel>extensionStrings</edgelabel>
        </childnode>
        <childnode refid="344" relation="usage">
          <edgelabel>copiedExtensionStrings</edgelabel>
        </childnode>
      </node>
      <node id="344">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="345" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="356">
        <label>std::vector&lt; VkImageView &gt;</label>
      </node>
      <node id="352">
        <label>vpr::VkDebugUtilsFunctions</label>
        <link refid="structvpr_1_1_vk_debug_utils_functions"/>
      </node>
      <node id="351">
        <label>std::vector&lt; VkQueueFamilyProperties &gt;</label>
      </node>
      <node id="337">
        <label>vpr::Swapchain</label>
        <link refid="classvpr_1_1_swapchain"/>
        <childnode refid="338" relation="usage">
          <edgelabel>impl</edgelabel>
        </childnode>
      </node>
      <node id="342">
        <label>std::map&lt; VkQueueFlags, VkDeviceQueueCreateInfo &gt;</label>
      </node>
      <node id="357">
        <label>vpr::SwapchainImpl::SwapchainInfo</label>
        <link refid="structvpr_1_1_swapchain_impl_1_1_swapchain_info"/>
        <childnode refid="358" relation="usage">
          <edgelabel>Formats</edgelabel>
        </childnode>
        <childnode refid="359" relation="usage">
          <edgelabel>PresentModes</edgelabel>
        </childnode>
      </node>
      <node id="353">
        <label>vpr::Instance</label>
        <link refid="classvpr_1_1_instance"/>
        <childnode refid="354" relation="usage">
          <edgelabel>extensionHandler</edgelabel>
        </childnode>
      </node>
      <node id="348">
        <label>vpr::PhysicalDevice</label>
        <link refid="classvpr_1_1_physical_device"/>
        <childnode refid="349" relation="usage">
          <edgelabel>impl</edgelabel>
        </childnode>
      </node>
      <node id="343">
        <label>std::vector&lt; const char *&gt;</label>
      </node>
      <node id="345">
        <label>std::string</label>
        <childnode refid="346" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="core/include/Swapchain.hpp" line="35" column="1" bodyfile="core/include/Swapchain.hpp" bodystart="35" bodyend="66"/>
    <listofallmembers>
      <member refid="classvpr_1_1_swapchain_1ae8f6f36da764662b8aabf33093299d8d" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>ColorFormat</name></member>
      <member refid="classvpr_1_1_swapchain_1a88583864a3d23a4049472e480562b539" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>ColorSpace</name></member>
      <member refid="classvpr_1_1_swapchain_1af29e2c4245bd5694afadc579783e5432" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>Destroy</name></member>
      <member refid="classvpr_1_1_swapchain_1a913d385f9a2a0e1d7c11c2bc04902411" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>Extent</name></member>
      <member refid="classvpr_1_1_swapchain_1a9bcbb78ab6b36c87830db08d48b7b255" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>Image</name></member>
      <member refid="classvpr_1_1_swapchain_1a19c9680de1214a5a3326ce77ee9a19b3" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>ImageCount</name></member>
      <member refid="classvpr_1_1_swapchain_1ae27fa9916dbadf5d8622772a9d7ca3c2" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>ImageView</name></member>
      <member refid="classvpr_1_1_swapchain_1a3674f7583ac2844d10aa7a7697fc1fa9" prot="private" virt="non-virtual"><scope>vpr::Swapchain</scope><name>impl</name></member>
      <member refid="classvpr_1_1_swapchain_1abe10399ef8345a026c2888d0ae5f8376" prot="private" virt="non-virtual"><scope>vpr::Swapchain</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_swapchain_1a34c3d73db1e99d3a395398fc0dbb5dc6" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>Recreate</name></member>
      <member refid="classvpr_1_1_swapchain_1a3e4ce83cae35d2eb7af80e56d67b6282" prot="private" virt="non-virtual"><scope>vpr::Swapchain</scope><name>Swapchain</name></member>
      <member refid="classvpr_1_1_swapchain_1a34fb7b3dfffa01d86b6f507ba0b27eff" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>Swapchain</name></member>
      <member refid="classvpr_1_1_swapchain_1aeabe8989b29a1d38dd151160946c26fa" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>vkHandle</name></member>
      <member refid="classvpr_1_1_swapchain_1a2dc442a2b5f947c65a9be8278200faa6" prot="public" virt="non-virtual"><scope>vpr::Swapchain</scope><name>~Swapchain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
