<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classvpr_1_1_fence" kind="class" language="C++" prot="public">
    <compoundname>vpr::Fence</compoundname>
    <includes refid="_fence_8hpp" local="no">Fence.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvpr_1_1_fence_1a953bbb86eaa9e15c00255153a09aa992" prot="private" static="no" mutable="no">
        <type>VkDevice</type>
        <definition>VkDevice vpr::Fence::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="30" column="1" bodyfile="sync/include/Fence.hpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_fence_1a1c5ab83cc8c2f5ef29dd23cee8b8c2ac" compoundref="_fence_8cpp" startline="7" endline="12">Fence</referencedby>
        <referencedby refid="classvpr_1_1_fence_1aa710f8426f0a3d057908c7a79cd0a7b1" compoundref="_fence_8cpp" startline="25" endline="29">~Fence</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_fence_1ac9af2a4f00f65f4f52a692b6a6865c36" prot="private" static="no" mutable="no">
        <type>VkFence</type>
        <definition>VkFence vpr::Fence::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="31" column="1" bodyfile="sync/include/Fence.hpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_fence_1a1c5ab83cc8c2f5ef29dd23cee8b8c2ac" compoundref="_fence_8cpp" startline="7" endline="12">Fence</referencedby>
        <referencedby refid="classvpr_1_1_fence_1af162b4facd36841eb6dfd005f5cc5852" compoundref="_fence_8cpp" startline="31" endline="33">vkHandle</referencedby>
        <referencedby refid="classvpr_1_1_fence_1aa710f8426f0a3d057908c7a79cd0a7b1" compoundref="_fence_8cpp" startline="25" endline="29">~Fence</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvpr_1_1_fence_1a65415778511c1da4b9ded51aec7f445a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::Fence::Fence</definition>
        <argsstring>(const Fence &amp;)=delete</argsstring>
        <name>Fence</name>
        <param>
          <type>const <ref refid="classvpr_1_1_fence" kindref="compound">Fence</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_fence_1a2943affff40b67c90e4e0e8e73a4bf56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_fence" kindref="compound">Fence</ref> &amp;</type>
        <definition>Fence&amp; vpr::Fence::operator=</definition>
        <argsstring>(const Fence &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvpr_1_1_fence" kindref="compound">Fence</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="17" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvpr_1_1_fence_1a1c5ab83cc8c2f5ef29dd23cee8b8c2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::Fence::Fence</definition>
        <argsstring>(const VkDevice &amp;dvc, VkFenceCreateFlags flags)</argsstring>
        <name>Fence</name>
        <param>
          <type>const VkDevice &amp;</type>
          <declname>dvc</declname>
        </param>
        <param>
          <type>VkFenceCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates a new fence object, using the given flags to change initial state (as that is the only important param in the createInfo) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to VK_FENCE_CREATE_SIGNALED_BIT to create the fence in a signaled state - otherwise pass a 0 and it will remain unsignaled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="22" column="1" bodyfile="sync/src/Fence.cpp" bodystart="7" bodyend="12"/>
        <references refid="classvpr_1_1_fence_1a953bbb86eaa9e15c00255153a09aa992" compoundref="_fence_8hpp" startline="30">device</references>
        <references refid="classvpr_1_1_fence_1ac9af2a4f00f65f4f52a692b6a6865c36" compoundref="_fence_8hpp" startline="31">handle</references>
        <references refid="namespacevpr_1a383ce267f4c15be17e424c49aded58bc" compoundref="_create_info_base_8hpp" startline="157">vpr::vk_fence_create_info_base</references>
        <references refid="vk_assert_8hpp_1a92c2e07b0d021fc331be70a65c61dacc" compoundref="vk_assert_8hpp" startline="9">VkAssert</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_fence_1ac1f0161242b1cb131a46e028d4e008b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::Fence::Fence</definition>
        <argsstring>(Fence &amp;&amp;other) noexcept</argsstring>
        <name>Fence</name>
        <param>
          <type><ref refid="classvpr_1_1_fence" kindref="compound">Fence</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="23" column="1" bodyfile="sync/src/Fence.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_fence_1a715632e77683a203d22bc717a91bcdde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_fence" kindref="compound">Fence</ref> &amp;</type>
        <definition>Fence &amp; vpr::Fence::operator=</definition>
        <argsstring>(Fence &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvpr_1_1_fence" kindref="compound">Fence</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="24" column="1" bodyfile="sync/src/Fence.cpp" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_fence_1aa710f8426f0a3d057908c7a79cd0a7b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::Fence::~Fence</definition>
        <argsstring>()</argsstring>
        <name>~Fence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="25" column="1" bodyfile="sync/src/Fence.cpp" bodystart="25" bodyend="29"/>
        <references refid="classvpr_1_1_fence_1a953bbb86eaa9e15c00255153a09aa992" compoundref="_fence_8hpp" startline="30">device</references>
        <references refid="classvpr_1_1_fence_1ac9af2a4f00f65f4f52a692b6a6865c36" compoundref="_fence_8hpp" startline="31">handle</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_fence_1af162b4facd36841eb6dfd005f5cc5852" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkFence &amp;</type>
        <definition>const VkFence &amp; vpr::Fence::vkHandle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>vkHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sync/include/Fence.hpp" line="27" column="1" bodyfile="sync/src/Fence.cpp" bodystart="31" bodyend="33"/>
        <references refid="classvpr_1_1_fence_1ac9af2a4f00f65f4f52a692b6a6865c36" compoundref="_fence_8hpp" startline="31">handle</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A fence is the most heavyweight of Vulkan synchronization primitives, and is for explicitly synchronizating the device and host. </para>    </briefdescription>
    <detaileddescription>
<para>Avoid using these unless absolutely necessary, as while it&apos;s better than waiting on a queue or device (requiring full event/pipeline flush), it&apos;s still not a cheap operation. </para>    </detaileddescription>
    <location file="sync/include/Fence.hpp" line="15" column="1" bodyfile="sync/include/Fence.hpp" bodystart="15" bodyend="32"/>
    <listofallmembers>
      <member refid="classvpr_1_1_fence_1a953bbb86eaa9e15c00255153a09aa992" prot="private" virt="non-virtual"><scope>vpr::Fence</scope><name>device</name></member>
      <member refid="classvpr_1_1_fence_1a65415778511c1da4b9ded51aec7f445a" prot="private" virt="non-virtual"><scope>vpr::Fence</scope><name>Fence</name></member>
      <member refid="classvpr_1_1_fence_1a1c5ab83cc8c2f5ef29dd23cee8b8c2ac" prot="public" virt="non-virtual"><scope>vpr::Fence</scope><name>Fence</name></member>
      <member refid="classvpr_1_1_fence_1ac1f0161242b1cb131a46e028d4e008b1" prot="public" virt="non-virtual"><scope>vpr::Fence</scope><name>Fence</name></member>
      <member refid="classvpr_1_1_fence_1ac9af2a4f00f65f4f52a692b6a6865c36" prot="private" virt="non-virtual"><scope>vpr::Fence</scope><name>handle</name></member>
      <member refid="classvpr_1_1_fence_1a2943affff40b67c90e4e0e8e73a4bf56" prot="private" virt="non-virtual"><scope>vpr::Fence</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_fence_1a715632e77683a203d22bc717a91bcdde" prot="public" virt="non-virtual"><scope>vpr::Fence</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_fence_1af162b4facd36841eb6dfd005f5cc5852" prot="public" virt="non-virtual"><scope>vpr::Fence</scope><name>vkHandle</name></member>
      <member refid="classvpr_1_1_fence_1aa710f8426f0a3d057908c7a79cd0a7b1" prot="public" virt="non-virtual"><scope>vpr::Fence</scope><name>~Fence</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
