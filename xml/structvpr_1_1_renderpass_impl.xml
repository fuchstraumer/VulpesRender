<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structvpr_1_1_renderpass_impl" kind="struct" language="C++" prot="public">
    <compoundname>vpr::RenderpassImpl</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvpr_1_1_renderpass_impl_1a234e4eca12a6b6246b512aa3660cfa7e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; VkClearValue &gt;</type>
        <definition>std::vector&lt;VkClearValue&gt; vpr::RenderpassImpl::clearValues</definition>
        <argsstring></argsstring>
        <name>clearValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="render/src/Renderpass.cpp" line="18" column="1" bodyfile="render/src/Renderpass.cpp" bodystart="18" bodyend="-1"/>
        <referencedby refid="structvpr_1_1_renderpass_impl_1a5d37571029174d290c9849dcdac272c2" compoundref="_renderpass_8cpp" startline="13" endline="17">operator=</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_renderpass_impl_1ab326c4b78d27487e41c8f56dd64b7dd5" prot="public" static="no" mutable="no">
        <type>const VkAllocationCallbacks *</type>
        <definition>const VkAllocationCallbacks* vpr::RenderpassImpl::allocators</definition>
        <argsstring></argsstring>
        <name>allocators</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="render/src/Renderpass.cpp" line="19" column="1" bodyfile="render/src/Renderpass.cpp" bodystart="19" bodyend="-1"/>
        <referencedby refid="structvpr_1_1_renderpass_impl_1a5d37571029174d290c9849dcdac272c2" compoundref="_renderpass_8cpp" startline="13" endline="17">operator=</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvpr_1_1_renderpass_impl_1a05dd2dfeb75e5123ab2ee277525b30c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::RenderpassImpl::RenderpassImpl</definition>
        <argsstring>()=default</argsstring>
        <name>RenderpassImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="render/src/Renderpass.cpp" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvpr_1_1_renderpass_impl_1a15bfdd0df421e2f3cf316744542404df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::RenderpassImpl::~RenderpassImpl</definition>
        <argsstring>()=default</argsstring>
        <name>~RenderpassImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="render/src/Renderpass.cpp" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvpr_1_1_renderpass_impl_1a569bffcd16989045f8a908f94c3442b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vpr::RenderpassImpl::RenderpassImpl</definition>
        <argsstring>(RenderpassImpl &amp;&amp;other) noexcept</argsstring>
        <name>RenderpassImpl</name>
        <param>
          <type><ref refid="structvpr_1_1_renderpass_impl" kindref="compound">RenderpassImpl</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="render/src/Renderpass.cpp" line="12" column="1" bodyfile="render/src/Renderpass.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="structvpr_1_1_renderpass_impl_1a5d37571029174d290c9849dcdac272c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvpr_1_1_renderpass_impl" kindref="compound">RenderpassImpl</ref> &amp;</type>
        <definition>RenderpassImpl&amp; vpr::RenderpassImpl::operator=</definition>
        <argsstring>(RenderpassImpl &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvpr_1_1_renderpass_impl" kindref="compound">RenderpassImpl</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="render/src/Renderpass.cpp" line="13" column="1" bodyfile="render/src/Renderpass.cpp" bodystart="13" bodyend="17"/>
        <references refid="structvpr_1_1_renderpass_impl_1ab326c4b78d27487e41c8f56dd64b7dd5" compoundref="_renderpass_8cpp" startline="19">allocators</references>
        <references refid="structvpr_1_1_renderpass_impl_1a234e4eca12a6b6246b512aa3660cfa7e" compoundref="_renderpass_8cpp" startline="18">clearValues</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="303">
        <label>std::vector&lt; VkClearValue &gt;</label>
      </node>
      <node id="302">
        <label>vpr::RenderpassImpl</label>
        <link refid="structvpr_1_1_renderpass_impl"/>
        <childnode refid="303" relation="usage">
          <edgelabel>clearValues</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="render/src/Renderpass.cpp" line="9" column="1" bodyfile="render/src/Renderpass.cpp" bodystart="9" bodyend="20"/>
    <listofallmembers>
      <member refid="structvpr_1_1_renderpass_impl_1ab326c4b78d27487e41c8f56dd64b7dd5" prot="public" virt="non-virtual"><scope>vpr::RenderpassImpl</scope><name>allocators</name></member>
      <member refid="structvpr_1_1_renderpass_impl_1a234e4eca12a6b6246b512aa3660cfa7e" prot="public" virt="non-virtual"><scope>vpr::RenderpassImpl</scope><name>clearValues</name></member>
      <member refid="structvpr_1_1_renderpass_impl_1a5d37571029174d290c9849dcdac272c2" prot="public" virt="non-virtual"><scope>vpr::RenderpassImpl</scope><name>operator=</name></member>
      <member refid="structvpr_1_1_renderpass_impl_1a05dd2dfeb75e5123ab2ee277525b30c7" prot="public" virt="non-virtual"><scope>vpr::RenderpassImpl</scope><name>RenderpassImpl</name></member>
      <member refid="structvpr_1_1_renderpass_impl_1a569bffcd16989045f8a908f94c3442b2" prot="public" virt="non-virtual"><scope>vpr::RenderpassImpl</scope><name>RenderpassImpl</name></member>
      <member refid="structvpr_1_1_renderpass_impl_1a15bfdd0df421e2f3cf316744542404df" prot="public" virt="non-virtual"><scope>vpr::RenderpassImpl</scope><name>~RenderpassImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
