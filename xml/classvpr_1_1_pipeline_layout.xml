<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classvpr_1_1_pipeline_layout" kind="class" language="C++" prot="public">
    <compoundname>vpr::PipelineLayout</compoundname>
    <includes refid="_pipeline_layout_8hpp" local="no">PipelineLayout.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvpr_1_1_pipeline_layout_1a6bade07d0e3c4e70f199e9679c6159c3" prot="private" static="no" mutable="no">
        <type>VkDevice</type>
        <definition>VkDevice vpr::PipelineLayout::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="35" column="1" bodyfile="resource/include/PipelineLayout.hpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_pipeline_layout_1a843c3d13e26edb0d7ce6a808848a640a" compoundref="_pipeline_layout_8cpp" startline="40" endline="51">Create</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_layout_1acf61dd67033f427f1bc0d109973c8835" compoundref="_pipeline_layout_8cpp" startline="25" endline="30">Destroy</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_layout_1afcea5dcf6d858441c93fea6154a52e00" compoundref="_pipeline_layout_8cpp" startline="18" endline="23">operator=</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvpr_1_1_pipeline_layout_1a3b17e4849d80b7072e5b3a782d498261" prot="private" static="no" mutable="no">
        <type>VkPipelineLayout</type>
        <definition>VkPipelineLayout vpr::PipelineLayout::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="36" column="1" bodyfile="resource/include/PipelineLayout.hpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_pipeline_layout_1a843c3d13e26edb0d7ce6a808848a640a" compoundref="_pipeline_layout_8cpp" startline="40" endline="51">Create</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_layout_1acf61dd67033f427f1bc0d109973c8835" compoundref="_pipeline_layout_8cpp" startline="25" endline="30">Destroy</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_layout_1a066d49e71c647c759ce2d258ce1963ab" compoundref="_pipeline_layout_8cpp" startline="53" endline="55">vkHandle</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a9d728a47905de179f963bed057d30799" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::PipelineLayout::PipelineLayout</definition>
        <argsstring>(const PipelineLayout &amp;)=delete</argsstring>
        <name>PipelineLayout</name>
        <param>
          <type>const <ref refid="classvpr_1_1_pipeline_layout" kindref="compound">PipelineLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a866abe69acabb93f1ca1620a2afa4252" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_pipeline_layout" kindref="compound">PipelineLayout</ref> &amp;</type>
        <definition>PipelineLayout&amp; vpr::PipelineLayout::operator=</definition>
        <argsstring>(const PipelineLayout &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvpr_1_1_pipeline_layout" kindref="compound">PipelineLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="14" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a5508313b0a3275b3281c80f4e0cf3626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::PipelineLayout::PipelineLayout</definition>
        <argsstring>(const VkDevice &amp;device)</argsstring>
        <name>PipelineLayout</name>
        <param>
          <type>const VkDevice &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="17" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a20cb2cc8b360a65d0d8454a70580c6f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::PipelineLayout::~PipelineLayout</definition>
        <argsstring>()</argsstring>
        <name>~PipelineLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="18" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="10" bodyend="12"/>
        <references refid="classvpr_1_1_pipeline_layout_1acf61dd67033f427f1bc0d109973c8835" compoundref="_pipeline_layout_8cpp" startline="25" endline="30">Destroy</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a71be4dc4eef49f6fbfc025bfa14a88c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::PipelineLayout::PipelineLayout</definition>
        <argsstring>(PipelineLayout &amp;&amp;other) noexcept</argsstring>
        <name>PipelineLayout</name>
        <param>
          <type><ref refid="classvpr_1_1_pipeline_layout" kindref="compound">PipelineLayout</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="19" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1afcea5dcf6d858441c93fea6154a52e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvpr_1_1_pipeline_layout" kindref="compound">PipelineLayout</ref> &amp;</type>
        <definition>PipelineLayout &amp; vpr::PipelineLayout::operator=</definition>
        <argsstring>(PipelineLayout &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvpr_1_1_pipeline_layout" kindref="compound">PipelineLayout</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="20" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="18" bodyend="23"/>
        <references refid="classvpr_1_1_pipeline_layout_1a6bade07d0e3c4e70f199e9679c6159c3" compoundref="_pipeline_layout_8hpp" startline="35">device</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1acf61dd67033f427f1bc0d109973c8835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::PipelineLayout::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="22" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="25" bodyend="30"/>
        <references refid="classvpr_1_1_pipeline_layout_1a6bade07d0e3c4e70f199e9679c6159c3" compoundref="_pipeline_layout_8hpp" startline="35">device</references>
        <references refid="classvpr_1_1_pipeline_layout_1a3b17e4849d80b7072e5b3a782d498261" compoundref="_pipeline_layout_8hpp" startline="36">handle</references>
        <referencedby refid="classvpr_1_1_pipeline_layout_1a20cb2cc8b360a65d0d8454a70580c6f2" compoundref="_pipeline_layout_8cpp" startline="10" endline="12">~PipelineLayout</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a8121008a98c9933450aba418fde5383e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::PipelineLayout::Create</definition>
        <argsstring>(const size_t num_push_constants, const VkPushConstantRange *push_constants)</argsstring>
        <name>Create</name>
        <param>
          <type>const size_t</type>
          <declname>num_push_constants</declname>
        </param>
        <param>
          <type>const VkPushConstantRange *</type>
          <declname>push_constants</declname>
        </param>
        <briefdescription>
<para>Creates a pipeline layout that will only use push constants for setting data in shaders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="25" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="32" bodyend="34"/>
        <referencedby refid="classvpr_1_1_pipeline_layout_1a696c23b583965c8963f4f72120ba0538" compoundref="_pipeline_layout_8cpp" startline="36" endline="38">Create</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a696c23b583965c8963f4f72120ba0538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::PipelineLayout::Create</definition>
        <argsstring>(const size_t num_layouts, const VkDescriptorSetLayout *set_layouts)</argsstring>
        <name>Create</name>
        <param>
          <type>const size_t</type>
          <declname>num_layouts</declname>
        </param>
        <param>
          <type>const VkDescriptorSetLayout *</type>
          <declname>set_layouts</declname>
        </param>
        <briefdescription>
<para>Creates a pipeline layout that will only use descriptors (of whatever type is in the layout) for data reads/writes in shaders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="27" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="36" bodyend="38"/>
        <references refid="classvpr_1_1_pipeline_layout_1a8121008a98c9933450aba418fde5383e" compoundref="_pipeline_layout_8cpp" startline="32" endline="34">Create</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a843c3d13e26edb0d7ce6a808848a640a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vpr::PipelineLayout::Create</definition>
        <argsstring>(const size_t num_push_constants, const VkPushConstantRange *push_constants, const size_t num_layouts, const VkDescriptorSetLayout *set_layouts)</argsstring>
        <name>Create</name>
        <param>
          <type>const size_t</type>
          <declname>num_push_constants</declname>
        </param>
        <param>
          <type>const VkPushConstantRange *</type>
          <declname>push_constants</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>num_layouts</declname>
        </param>
        <param>
          <type>const VkDescriptorSetLayout *</type>
          <declname>set_layouts</declname>
        </param>
        <briefdescription>
<para>Creates a pipeline layout that will utilize both push constants and descriptors in the shaders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="29" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="40" bodyend="51"/>
        <references refid="classvpr_1_1_pipeline_layout_1a6bade07d0e3c4e70f199e9679c6159c3" compoundref="_pipeline_layout_8hpp" startline="35">device</references>
        <references refid="classvpr_1_1_pipeline_layout_1a3b17e4849d80b7072e5b3a782d498261" compoundref="_pipeline_layout_8hpp" startline="36">handle</references>
        <references refid="namespacevpr_1a2202274b3eb94b6a4685bc4810ff4084" compoundref="_create_info_base_8hpp" startline="410">vpr::vk_pipeline_layout_create_info_base</references>
        <references refid="vk_assert_8hpp_1a92c2e07b0d021fc331be70a65c61dacc" compoundref="vk_assert_8hpp" startline="9">VkAssert</references>
      </memberdef>
      <memberdef kind="function" id="classvpr_1_1_pipeline_layout_1a066d49e71c647c759ce2d258ce1963ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VkPipelineLayout &amp;</type>
        <definition>const VkPipelineLayout &amp; vpr::PipelineLayout::vkHandle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>vkHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="resource/include/PipelineLayout.hpp" line="32" column="1" bodyfile="resource/src/PipelineLayout.cpp" bodystart="53" bodyend="55"/>
        <references refid="classvpr_1_1_pipeline_layout_1a3b17e4849d80b7072e5b3a782d498261" compoundref="_pipeline_layout_8hpp" startline="36">handle</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classvpr_1_1_pipeline_layout" kindref="compound">PipelineLayout</ref> is an RAII wrapper around a VkPipelineLayout object that also simplifies setting what resources the pipeline layout will have bound to it. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="resource/include/PipelineLayout.hpp" line="12" column="1" bodyfile="resource/include/PipelineLayout.hpp" bodystart="12" bodyend="37"/>
    <listofallmembers>
      <member refid="classvpr_1_1_pipeline_layout_1a8121008a98c9933450aba418fde5383e" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>Create</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a696c23b583965c8963f4f72120ba0538" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>Create</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a843c3d13e26edb0d7ce6a808848a640a" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>Create</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1acf61dd67033f427f1bc0d109973c8835" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>Destroy</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a6bade07d0e3c4e70f199e9679c6159c3" prot="private" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>device</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a3b17e4849d80b7072e5b3a782d498261" prot="private" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>handle</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a866abe69acabb93f1ca1620a2afa4252" prot="private" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1afcea5dcf6d858441c93fea6154a52e00" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>operator=</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a9d728a47905de179f963bed057d30799" prot="private" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>PipelineLayout</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a5508313b0a3275b3281c80f4e0cf3626" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>PipelineLayout</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a71be4dc4eef49f6fbfc025bfa14a88c3" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>PipelineLayout</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a066d49e71c647c759ce2d258ce1963ab" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>vkHandle</name></member>
      <member refid="classvpr_1_1_pipeline_layout_1a20cb2cc8b360a65d0d8454a70580c6f2" prot="public" virt="non-virtual"><scope>vpr::PipelineLayout</scope><name>~PipelineLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
