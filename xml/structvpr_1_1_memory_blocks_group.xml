<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structvpr_1_1_memory_blocks_group" kind="struct" language="C++" prot="public">
    <compoundname>vpr::MemoryBlocksGroup</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvpr_1_1_memory_blocks_group_1a890fbabbccf4dc4381ef78c3d4938af2" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevpr_1a0e514923b7b5d7b161e485c8b3ae2e15" kindref="member">memory_attributes</ref></type>
        <definition>memory_attributes vpr::MemoryBlocksGroup::Attributes</definition>
        <argsstring></argsstring>
        <name>Attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/DebugVisualization.cpp" line="43" column="1" bodyfile="alloc/src/DebugVisualization.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_memory_blocks_group_1a1620ec39272d7761a4b33e5b19cdc1d7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structvpr_1_1_memory_block_info" kindref="compound">MemoryBlockInfo</ref> &gt;</type>
        <definition>std::vector&lt;MemoryBlockInfo&gt; vpr::MemoryBlocksGroup::Blocks</definition>
        <argsstring></argsstring>
        <name>Blocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/DebugVisualization.cpp" line="44" column="1" bodyfile="alloc/src/DebugVisualization.cpp" bodystart="44" bodyend="-1"/>
        <referencedby refid="structvpr_1_1_memory_blocks_group_1ab00a2e4897ed34977f35689857e01e50" compoundref="_debug_visualization_8cpp" startline="68" endline="73">MemoryBlocksGroup</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvpr_1_1_memory_blocks_group_1ab00a2e4897ed34977f35689857e01e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vpr::MemoryBlocksGroup::MemoryBlocksGroup</definition>
        <argsstring>(const std::vector&lt; std::unique_ptr&lt; vpr::MemoryBlock &gt;&gt; &amp;allocations)</argsstring>
        <name>MemoryBlocksGroup</name>
        <param>
          <type>const std::vector&lt; std::unique_ptr&lt; <ref refid="classvpr_1_1_memory_block" kindref="compound">vpr::MemoryBlock</ref> &gt;&gt; &amp;</type>
          <declname>allocations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/DebugVisualization.cpp" line="41" column="1" bodyfile="alloc/src/DebugVisualization.cpp" bodystart="68" bodyend="73"/>
        <references refid="structvpr_1_1_memory_blocks_group_1a1620ec39272d7761a4b33e5b19cdc1d7" compoundref="_debug_visualization_8cpp" startline="44">Blocks</references>
      </memberdef>
      <memberdef kind="function" id="structvpr_1_1_memory_blocks_group_1a938d271cfa0e6ed701695269910c300c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vpr::MemoryBlocksGroup::MemoryBlocksGroup</definition>
        <argsstring>()</argsstring>
        <name>MemoryBlocksGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/DebugVisualization.cpp" line="42" column="1" bodyfile="alloc/src/DebugVisualization.cpp" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="270">
        <label>std::forward_list&lt; vpr::SuballocationDrawCommand &gt;</label>
        <childnode refid="271" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="273">
        <label>vpr::Suballocation</label>
        <link refid="structvpr_1_1_suballocation"/>
      </node>
      <node id="271">
        <label>vpr::SuballocationDrawCommand</label>
        <link refid="structvpr_1_1_suballocation_draw_command"/>
      </node>
      <node id="268">
        <label>std::vector&lt; vpr::MemoryBlockInfo &gt;</label>
        <childnode refid="269" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="272">
        <label>std::list&lt; vpr::Suballocation &gt;</label>
        <childnode refid="273" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="267">
        <label>vpr::MemoryBlocksGroup</label>
        <link refid="structvpr_1_1_memory_blocks_group"/>
        <childnode refid="268" relation="usage">
          <edgelabel>Blocks</edgelabel>
        </childnode>
      </node>
      <node id="269">
        <label>vpr::MemoryBlockInfo</label>
        <link refid="structvpr_1_1_memory_block_info"/>
        <childnode refid="270" relation="usage">
          <edgelabel>DrawCommands</edgelabel>
        </childnode>
        <childnode refid="272" relation="usage">
          <edgelabel>Suballocations</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="alloc/src/DebugVisualization.cpp" line="40" column="1" bodyfile="alloc/src/DebugVisualization.cpp" bodystart="40" bodyend="45"/>
    <listofallmembers>
      <member refid="structvpr_1_1_memory_blocks_group_1a890fbabbccf4dc4381ef78c3d4938af2" prot="public" virt="non-virtual"><scope>vpr::MemoryBlocksGroup</scope><name>Attributes</name></member>
      <member refid="structvpr_1_1_memory_blocks_group_1a1620ec39272d7761a4b33e5b19cdc1d7" prot="public" virt="non-virtual"><scope>vpr::MemoryBlocksGroup</scope><name>Blocks</name></member>
      <member refid="structvpr_1_1_memory_blocks_group_1ab00a2e4897ed34977f35689857e01e50" prot="public" virt="non-virtual"><scope>vpr::MemoryBlocksGroup</scope><name>MemoryBlocksGroup</name></member>
      <member refid="structvpr_1_1_memory_blocks_group_1a938d271cfa0e6ed701695269910c300c" prot="public" virt="non-virtual"><scope>vpr::MemoryBlocksGroup</scope><name>MemoryBlocksGroup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
