<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structvpr_1_1_allocation_impl_1_1private_allocation" kind="struct" language="C++" prot="public">
    <compoundname>vpr::AllocationImpl::privateAllocation</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvpr_1_1_allocation_impl_1_1private_allocation_1a5fe23cb3dca2ba7bb90f75146d2e693e" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t vpr::AllocationImpl::privateAllocation::MemoryTypeIdx</definition>
        <argsstring></argsstring>
        <name>MemoryTypeIdx</name>
        <initializer>{ std::numeric_limits&lt;uint32_t&gt;::max() }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Allocation.cpp" line="24" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="24" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_allocation_1ad680abfd77facfe5efcc222b154b595d" compoundref="_allocation_8cpp" startline="79" endline="88">vpr::Allocation::InitPrivate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_allocation_impl_1_1private_allocation_1a694df8b0667613a5cc03732ee459c178" prot="public" static="no" mutable="no">
        <type>VkDeviceMemory</type>
        <definition>VkDeviceMemory vpr::AllocationImpl::privateAllocation::DvcMemory</definition>
        <argsstring></argsstring>
        <name>DvcMemory</name>
        <initializer>{ VK_NULL_HANDLE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Allocation.cpp" line="25" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_allocation_1ad680abfd77facfe5efcc222b154b595d" compoundref="_allocation_8cpp" startline="79" endline="88">vpr::Allocation::InitPrivate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_allocation_impl_1_1private_allocation_1ae3446d4e983b3a150713140d726dd328" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vpr::AllocationImpl::privateAllocation::PersistentlyMapped</definition>
        <argsstring></argsstring>
        <name>PersistentlyMapped</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Allocation.cpp" line="26" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_allocation_1ad680abfd77facfe5efcc222b154b595d" compoundref="_allocation_8cpp" startline="79" endline="88">vpr::Allocation::InitPrivate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structvpr_1_1_allocation_impl_1_1private_allocation_1a3be54a020f5ee343078e58d4324702ca" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* vpr::AllocationImpl::privateAllocation::MappedData</definition>
        <argsstring></argsstring>
        <name>MappedData</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alloc/src/Allocation.cpp" line="27" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_allocation_1ad680abfd77facfe5efcc222b154b595d" compoundref="_allocation_8cpp" startline="79" endline="88">vpr::Allocation::InitPrivate</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="alloc/src/Allocation.cpp" line="23" column="1" bodyfile="alloc/src/Allocation.cpp" bodystart="23" bodyend="28"/>
    <listofallmembers>
      <member refid="structvpr_1_1_allocation_impl_1_1private_allocation_1a694df8b0667613a5cc03732ee459c178" prot="public" virt="non-virtual"><scope>vpr::AllocationImpl::privateAllocation</scope><name>DvcMemory</name></member>
      <member refid="structvpr_1_1_allocation_impl_1_1private_allocation_1a3be54a020f5ee343078e58d4324702ca" prot="public" virt="non-virtual"><scope>vpr::AllocationImpl::privateAllocation</scope><name>MappedData</name></member>
      <member refid="structvpr_1_1_allocation_impl_1_1private_allocation_1a5fe23cb3dca2ba7bb90f75146d2e693e" prot="public" virt="non-virtual"><scope>vpr::AllocationImpl::privateAllocation</scope><name>MemoryTypeIdx</name></member>
      <member refid="structvpr_1_1_allocation_impl_1_1private_allocation_1ae3446d4e983b3a150713140d726dd328" prot="public" virt="non-virtual"><scope>vpr::AllocationImpl::privateAllocation</scope><name>PersistentlyMapped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
