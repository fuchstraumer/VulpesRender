MACRO(ADD_MSVC_PRECOMPILED_HEADER PrecompiledHeader PrecompiledSource SourcesVar)
  IF(MSVC)
    GET_FILENAME_COMPONENT(PrecompiledBasename ${PrecompiledHeader} NAME_WE)
    SET(PrecompiledBinary "${CMAKE_CURRENT_BINARY_DIR}/${PrecompiledBasename}.pch")
    SET(Sources ${${SourcesVar}})

    SET_SOURCE_FILES_PROPERTIES(${PrecompiledSource}
                                PROPERTIES COMPILE_FLAGS "/Yc\"${PrecompiledHeader}\" /Fp\"${PrecompiledBinary}\""
                                           OBJECT_OUTPUTS "${PrecompiledBinary}")
    SET_SOURCE_FILES_PROPERTIES(${Sources}
                                PROPERTIES COMPILE_FLAGS "/Yu\"${PrecompiledHeader}\" /FI\"${PrecompiledHeader}\" /Fp\"${PrecompiledBinary}\""
                                           OBJECT_DEPENDS "${PrecompiledBinary}")  
    # Add precompiled header to SourcesVar
    LIST(APPEND ${SourcesVar} ${PrecompiledSource})
  ENDIF(MSVC)
ENDMACRO(ADD_MSVC_PRECOMPILED_HEADER)
INCLUDE(ExternalProject)
CMAKE_MINIMUM_REQUIRED(VERSION 3.6)
PROJECT(VulpesRender)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

SET(CMAKE_CXX_STANDARD LATEST)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

ExternalProject_Add(assimp
  PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/assimp"
  GIT_REPOSITORY "https://github.com/assimp/assimp.git"
  GIT_TAG ""
  BUILD_IN_SOURCE 1
  CMAKE_ARGS
    "-DASSIMP_LIB_INSTALL_DIR=${CMAKE_CURRENT_SOURCE_DIR}/ext/assimp/"
    "-DASSIMP_INCLUDE_INSTALL_DIR=${CMAKE_CURRENT_SOURCE_DIR}/ext/"
    "-DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF"
    "-DASSIMP_BUILD_STL_IMPORTER=ON"
    "-DASSIMP_BUILD_OBJ_IMPORTER=ON"
    "-DASSIMP_BUILD_ASSIMP_TOOLS=OFF"
    "-DASSIMP_INSTALL_PDB=OFF"
    "-DBUILD_SHARED_LIBS=OFF"
    "-DASSIMP_BUILD_TESTS=OFF"
    "-DASSIMP_BUILD_TESTING=OFF"
    "-DASSIMP_OPT_BUILD_PACKAGES=OFF"
    "-DASSIMP_BUILD_DOCS=OFF"
    "-DCMAKE_DEBUG_POSTFIX=-gd"
    "-DLIBRARY_SUFFIX=-vc141-mt"
    INSTALL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ext/")

ExternalProject_Add(glfw3
  PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/glfw"
  GIT_REPOSITORY "https://github.com/glfw/glfw.git"
  GIT_TAG ""
  BUILD_IN_SOURCE 1
  CMAKE_ARGS 
    "-DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_SOURCE_DIR}/ext/"
    "-DGLFW_BUILD_EXAMPLES=OFF"
    "-DGLFW_BUILD_TESTS=OFF"
    "-DGLFW_BUILD_DOCS=OFF"
    "-DGLFW_DOCUMENT_INTERNALS=OFF"
    "-DUSE_MSVC_RUNTIME_LIBRARY_DLL=OFF")


#ExternalProject_Add(glslang
#  PREFIX "{$CMAKE_CURRENT_SOURCE_DIR}/glslang"
#  GIT_REPOSITORY "https://github.com/KhronosGroup/glslang/glslang.git"
#  GIT_TAG ""
#  BUILD_IN_SOURCE 1 
#  CMAKE_ARGS
#    "-DBUILD_TESTING=OFF"
#    "-DENABLE_AMD_EXTENSIONS=OFF"
#    "-DENABLE_NV_EXTENSIONS=OFF"
#    "-DENABLE_GLSLANG_BINARIES=OFF"
#    "-DENABLE_HLSL=OFF"
#  INSTALL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ext/")

FILE(GLOB UTIL "src/util/*.cc" "src/util/*.cpp" "include/util/*.h")
FILE(GLOB COMMON "src/common/*.h")
FILE(GLOB COMMAND_FILES "src/command/*.cpp" "include/command/*.h")
FILE(GLOB CORE "src/core/*.cpp" "include/core/*.h")
FILE(GLOB RESOURCES "src/resource/*.cpp" "include/resource/*.h")
FILE(GLOB RENDER "src/render/*.cpp" "include/render/*.h")
FILE(GLOB GUI "src/gui/*.cpp" "include/gui/*.h")
FILE(GLOB IMGUI "imgui/imgui.cpp" "imgui/imgui.h" "imgui/imgui_draw.cpp" "imgui/imgui_internal.h")

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES("imgui/")
INCLUDE_DIRECTORIES("ext/")
INCLUDE_DIRECTORIES($ENV{VULKAN_SDK}/Include)

FILE(GLOB PROJECT_SOURCES "src/util/*.cpp" "src/command/*.cpp" "src/core/*.cpp" "src/render/*.cpp" "src/resource/*.cpp" "src/gui/*.cpp" "src/BaseScene.cpp")
ADD_MSVC_PRECOMPILED_HEADER("vpr_stdafx.h" "src/vpr_stdafx.cpp" ${PROJECT_SOURCES})

SOURCE_GROUP("util" FILES ${UTIL})
SOURCE_GROUP("common" FILES ${COMMON})
SOURCE_GROUP("command" FILES ${COMMAND_FILES})
SOURCE_GROUP("core" FILES ${CORE})
SOURCE_GROUP("resource" FILES ${RESOURCES})
SOURCE_GROUP("render" FILES ${RENDER})
SOURCE_GROUP("gui" FILES ${GUI})
SOURCE_GROUP("imgui" FILES ${IMGUI})

IF(MSVC)
IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
SET(CMAKE_STATIC_LINKER_FLAGS "-NODEFAULTLIB \"${PROJECT_SOURCE_DIR}/ext/lib/glfw3.lib\" \"${PROJECT_SOURCE_DIR}/ext/assimp/assimp-vc141-mt-gd.lib\"")
ELSE()
SET(CMAKE_STATIC_LINKER_FLAGS "-NODEFAULTLIB \"${PROJECT_SOURCE_DIR}/ext/lib/glfw3.lib\" \"${PROJECT_SOURCE_DIR}/ext/assimp/assimp-vc141-mt.lib\"")
ENDIF()
ENDIF(MSVC)

ADD_LIBRARY(VulpesRender STATIC "include/vpr_stdafx.h" "src/vpr_stdafx.cpp" "include/BaseScene.h" "src/BaseScene.cpp" ${IMGUI} ${UTIL} ${COMMON} ${COMMAND_FILES} ${CORE} ${RESOURCES} ${RENDER} ${GUI})


