<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="vk_assert_8hpp" kind="file" language="C++">
    <compoundname>vkAssert.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">cassert</includes>
    <includes local="yes">vulkan/vulkan.h</includes>
    <includedby refid="_allocator_impl_8hpp" local="yes">alloc/src/AllocatorImpl.hpp</includedby>
    <includedby refid="_memory_block_8cpp" local="yes">alloc/src/MemoryBlock.cpp</includedby>
    <includedby refid="_command_pool_8cpp" local="yes">command/src/CommandPool.cpp</includedby>
    <includedby refid="_instance_8cpp" local="yes">core/src/Instance.cpp</includedby>
    <includedby refid="_logical_device_8cpp" local="yes">core/src/LogicalDevice.cpp</includedby>
    <includedby refid="_surface_k_h_r_8cpp" local="yes">core/src/SurfaceKHR.cpp</includedby>
    <includedby refid="_swapchain_8cpp" local="yes">core/src/Swapchain.cpp</includedby>
    <includedby refid="_framebuffer_8cpp" local="yes">render/src/Framebuffer.cpp</includedby>
    <includedby refid="_graphics_pipeline_8cpp" local="yes">render/src/GraphicsPipeline.cpp</includedby>
    <includedby refid="_renderpass_8cpp" local="yes">render/src/Renderpass.cpp</includedby>
    <includedby refid="_buffer_deprecated_8cpp" local="yes">resource/src/BufferDeprecated.cpp</includedby>
    <includedby refid="_descriptor_pool_8cpp" local="yes">resource/src/DescriptorPool.cpp</includedby>
    <includedby refid="_descriptor_set_8cpp" local="yes">resource/src/DescriptorSet.cpp</includedby>
    <includedby refid="_descriptor_set_layout_8cpp" local="yes">resource/src/DescriptorSetLayout.cpp</includedby>
    <includedby refid="_image_deprecated_8cpp" local="yes">resource/src/ImageDeprecated.cpp</includedby>
    <includedby refid="_pipeline_cache_8cpp" local="yes">resource/src/PipelineCache.cpp</includedby>
    <includedby refid="_pipeline_layout_8cpp" local="yes">resource/src/PipelineLayout.cpp</includedby>
    <includedby refid="_sampler_8cpp" local="yes">resource/src/Sampler.cpp</includedby>
    <includedby refid="_shader_module_8cpp" local="yes">resource/src/ShaderModule.cpp</includedby>
    <includedby refid="_event_8cpp" local="yes">sync/src/Event.cpp</includedby>
    <includedby refid="_fence_8cpp" local="yes">sync/src/Fence.cpp</includedby>
    <includedby refid="_semaphore_8cpp" local="yes">sync/src/Semaphore.cpp</includedby>
    <incdepgraph>
      <node id="363">
        <label>cassert</label>
      </node>
      <node id="361">
        <label>common/vkAssert.hpp</label>
        <link refid="vk_assert_8hpp"/>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
      </node>
      <node id="364">
        <label>vulkan/vulkan.h</label>
      </node>
      <node id="362">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="371">
        <label>command/src/CommandPool.cpp</label>
        <link refid="_command_pool_8cpp"/>
      </node>
      <node id="368">
        <label>alloc/src/AllocatorImpl.cpp</label>
        <link refid="_allocator_impl_8cpp"/>
      </node>
      <node id="389">
        <label>sync/src/Fence.cpp</label>
        <link refid="_fence_8cpp"/>
      </node>
      <node id="382">
        <label>resource/src/DescriptorSetLayout.cpp</label>
        <link refid="_descriptor_set_layout_8cpp"/>
      </node>
      <node id="384">
        <label>resource/src/PipelineCache.cpp</label>
        <link refid="_pipeline_cache_8cpp"/>
      </node>
      <node id="385">
        <label>resource/src/PipelineLayout.cpp</label>
        <link refid="_pipeline_layout_8cpp"/>
      </node>
      <node id="383">
        <label>resource/src/ImageDeprecated.cpp</label>
        <link refid="_image_deprecated_8cpp"/>
      </node>
      <node id="370">
        <label>alloc/src/MemoryBlock.cpp</label>
        <link refid="_memory_block_8cpp"/>
      </node>
      <node id="365">
        <label>common/vkAssert.hpp</label>
        <link refid="vk_assert_8hpp"/>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="369">
        <label>alloc/src/DebugVisualization.cpp</label>
        <link refid="_debug_visualization_8cpp"/>
      </node>
      <node id="390">
        <label>sync/src/Semaphore.cpp</label>
        <link refid="_semaphore_8cpp"/>
      </node>
      <node id="374">
        <label>core/src/SurfaceKHR.cpp</label>
        <link refid="_surface_k_h_r_8cpp"/>
      </node>
      <node id="386">
        <label>resource/src/Sampler.cpp</label>
        <link refid="_sampler_8cpp"/>
      </node>
      <node id="380">
        <label>resource/src/DescriptorPool.cpp</label>
        <link refid="_descriptor_pool_8cpp"/>
      </node>
      <node id="379">
        <label>resource/src/BufferDeprecated.cpp</label>
        <link refid="_buffer_deprecated_8cpp"/>
      </node>
      <node id="377">
        <label>render/src/GraphicsPipeline.cpp</label>
        <link refid="_graphics_pipeline_8cpp"/>
      </node>
      <node id="375">
        <label>core/src/Swapchain.cpp</label>
        <link refid="_swapchain_8cpp"/>
      </node>
      <node id="366">
        <label>alloc/src/AllocatorImpl.hpp</label>
        <link refid="_allocator_impl_8hpp"/>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
      </node>
      <node id="381">
        <label>resource/src/DescriptorSet.cpp</label>
        <link refid="_descriptor_set_8cpp"/>
      </node>
      <node id="387">
        <label>resource/src/ShaderModule.cpp</label>
        <link refid="_shader_module_8cpp"/>
      </node>
      <node id="373">
        <label>core/src/LogicalDevice.cpp</label>
        <link refid="_logical_device_8cpp"/>
      </node>
      <node id="378">
        <label>render/src/Renderpass.cpp</label>
        <link refid="_renderpass_8cpp"/>
      </node>
      <node id="372">
        <label>core/src/Instance.cpp</label>
        <link refid="_instance_8cpp"/>
      </node>
      <node id="367">
        <label>alloc/src/Allocator.cpp</label>
        <link refid="_allocator_8cpp"/>
      </node>
      <node id="376">
        <label>render/src/Framebuffer.cpp</label>
        <link refid="_framebuffer_8cpp"/>
      </node>
      <node id="388">
        <label>sync/src/Event.cpp</label>
        <link refid="_event_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="vk_assert_8hpp_1a0225c47fa83b48a34a0b5de62e7d0961" prot="public" static="no">
        <name>VK_ASSERT_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/vkAssert.hpp" line="3" column="9" bodyfile="common/vkAssert.hpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vk_assert_8hpp_1a92c2e07b0d021fc331be70a65c61dacc" prot="public" static="no">
        <name>VkAssert</name>
        <param><defname>expression</defname></param>
        <initializer>{ <ref refid="vk_assert_8hpp_1ae69ba6233e866a87c7427b71d4be0563" kindref="member">vkErrCheck</ref>((expression), __FILE__, __LINE__); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/vkAssert.hpp" line="9" column="9" bodyfile="common/vkAssert.hpp" bodystart="9" bodyend="-1"/>
        <referencedby refid="classvpr_1_1_descriptor_set_1a3f90e39823801c8c37e2e89f3c262c72" compoundref="_descriptor_set_8cpp" startline="112" endline="126">vpr::DescriptorSet::allocate</referencedby>
        <referencedby refid="classvpr_1_1_command_pool_1a3df787753ace292c1b295907754172a3" compoundref="_command_pool_8cpp" startline="59" endline="73">vpr::CommandPool::AllocateCmdBuffers</referencedby>
        <referencedby refid="classvpr_1_1_allocator_1ae8c982057f90fad764d25d8b081e5603" compoundref="_allocator_8cpp" startline="123" endline="131">vpr::Allocator::AllocateForBuffer</referencedby>
        <referencedby refid="classvpr_1_1_allocator_1a74d845e760e100129d83bc40cd4fb12e" compoundref="_allocator_8cpp" startline="113" endline="121">vpr::Allocator::AllocateForImage</referencedby>
        <referencedby refid="structvpr_1_1_allocator_impl_1a2ec18969e688b4cb472a16535482208d" compoundref="_allocator_impl_8cpp" startline="268" endline="289">vpr::AllocatorImpl::allocatePrivateMemory</referencedby>
        <referencedby refid="classvpr_1_1_buffer_1a843cf452ecc4aed63fef2915d40ab9c4" compoundref="_buffer_deprecated_8cpp" startline="99" endline="118">vpr::Buffer::CopyTo</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_pool_1a970a61cfde29654c3bac86b6e8fbb445" compoundref="_descriptor_pool_8cpp" startline="57" endline="77">vpr::DescriptorPool::Create</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_layout_1a843c3d13e26edb0d7ce6a808848a640a" compoundref="_pipeline_layout_8cpp" startline="40" endline="51">vpr::PipelineLayout::Create</referencedby>
        <referencedby refid="classvpr_1_1_surface_k_h_r_1a2c27a5198682d3069e0936dbeb0f24b4" compoundref="_surface_k_h_r_8cpp" startline="49" endline="55">vpr::SurfaceKHR::create</referencedby>
        <referencedby refid="classvpr_1_1_descriptor_set_layout_1a1e22c5f5bab22786c71d280940b92b63" compoundref="_descriptor_set_layout_8cpp" startline="60" endline="75">vpr::DescriptorSetLayout::create</referencedby>
        <referencedby refid="structvpr_1_1_swapchain_impl_1a26979c4e9803da67ef61bf098377b341" compoundref="_swapchain_8cpp" startline="88" endline="97">vpr::SwapchainImpl::create</referencedby>
        <referencedby refid="classvpr_1_1_device_1a3b0734cd598d9a64f3c459e9dc4e84ce" compoundref="_logical_device_8cpp" startline="271" endline="297">vpr::Device::create</referencedby>
        <referencedby refid="classvpr_1_1_buffer_1abe56ee5b43a1be73960fa5edae0dcb0b" compoundref="_buffer_deprecated_8cpp" startline="40" endline="53">vpr::Buffer::CreateBuffer</referencedby>
        <referencedby refid="classvpr_1_1_image_1a7f1db39dbc01e0775d8ba7adcb8507fa" compoundref="_image_deprecated_8cpp" startline="151" endline="159">vpr::Image::CreateImage</referencedby>
        <referencedby refid="classvpr_1_1_graphics_pipeline_1a1c7b5164865ce64a370b6926a714beaa" compoundref="_graphics_pipeline_8cpp" startline="64" endline="71">vpr::GraphicsPipeline::CreateMultiple</referencedby>
        <referencedby refid="classvpr_1_1_buffer_1add8b2dbfd79028bedfd30b5c5f48b3b2" compoundref="_buffer_deprecated_8cpp" startline="231" endline="245">vpr::Buffer::CreateStagingBuffer</referencedby>
        <referencedby refid="classvpr_1_1_image_1a9f06292f9e5c640e706783f5dffdbb7d" compoundref="_image_deprecated_8cpp" startline="55" endline="58">vpr::Image::CreateView</referencedby>
        <referencedby refid="classvpr_1_1_buffer_1a8c9624441b1de2b79940cd8cc802b7e2" compoundref="_buffer_deprecated_8cpp" startline="170" endline="177">vpr::Buffer::CreateView</referencedby>
        <referencedby refid="classvpr_1_1_command_pool_1ac46b6fae9d0650041a4929698d59508a" compoundref="_command_pool_8cpp" startline="122" endline="137">vpr::CommandPool::EndSingleCmdBuffer</referencedby>
        <referencedby refid="classvpr_1_1_event_1aa0caf00452e301cb6220e2394b102084" compoundref="_event_8cpp" startline="7" endline="10">vpr::Event::Event</referencedby>
        <referencedby refid="classvpr_1_1_fence_1a1c5ab83cc8c2f5ef29dd23cee8b8c2ac" compoundref="_fence_8cpp" startline="7" endline="12">vpr::Fence::Fence</referencedby>
        <referencedby refid="classvpr_1_1_buffer_1a805e50dbbed7233718d366a9742d3246" compoundref="_buffer_deprecated_8cpp" startline="189" endline="192">vpr::Buffer::Flush</referencedby>
        <referencedby refid="classvpr_1_1_framebuffer_1a89f0568cd606dcb2b9a2210bacc2fbae" compoundref="_framebuffer_8cpp" startline="7" endline="11">vpr::Framebuffer::Framebuffer</referencedby>
        <referencedby refid="classvpr_1_1_graphics_pipeline_1a6b28822784f8e49222cdaacef49f29de" compoundref="_graphics_pipeline_8cpp" startline="48" endline="52">vpr::GraphicsPipeline::Init</referencedby>
        <referencedby refid="classvpr_1_1_buffer_1ae44f3e3a2bcb922d522088c102147663" compoundref="_buffer_deprecated_8cpp" startline="194" endline="197">vpr::Buffer::Invalidate</referencedby>
        <referencedby refid="classvpr_1_1_memory_block_1abff18a0397a4aca3cbe99d0206c82981" compoundref="_memory_block_8cpp" startline="422" endline="426">vpr::MemoryBlock::Map</referencedby>
        <referencedby refid="classvpr_1_1_buffer_1a4c04d59a27d4c3471bdf90eda1c8b662" compoundref="_buffer_deprecated_8cpp" startline="179" endline="183">vpr::Buffer::Map</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_cache_1a19ed8db620df88ec199f92921501341e" compoundref="_pipeline_cache_8cpp" startline="22" endline="50">vpr::PipelineCache::PipelineCache</referencedby>
        <referencedby refid="classvpr_1_1_renderpass_1a36f37f7e996465e88ac1ee8d1245e26c" compoundref="_renderpass_8cpp" startline="74" endline="77">vpr::Renderpass::Recreate</referencedby>
        <referencedby refid="classvpr_1_1_renderpass_1a5979cfebed3d030c2718a476c429709c" compoundref="_renderpass_8cpp" startline="22" endline="25">vpr::Renderpass::Renderpass</referencedby>
        <referencedby refid="classvpr_1_1_event_1abf78b8b9982c506d3e85ba5f75c8285c" compoundref="_event_8cpp" startline="34" endline="37">vpr::Event::Reset</referencedby>
        <referencedby refid="classvpr_1_1_sampler_1a4c4a818b0590864ebbc5d17473fb0ca4" compoundref="_sampler_8cpp" startline="7" endline="10">vpr::Sampler::Sampler</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_cache_1a5f5d17b3c6d668d22932ef2b3c6a6122" compoundref="_pipeline_cache_8cpp" startline="163" endline="205">vpr::PipelineCache::saveToFile</referencedby>
        <referencedby refid="classvpr_1_1_event_1a0089000d7e4ffd39efab590059c52ca5" compoundref="_event_8cpp" startline="29" endline="32">vpr::Event::Set</referencedby>
        <referencedby refid="structvpr_1_1_swapchain_impl_1aaded5613928f1e39c1a61ac25be8bf88" compoundref="_swapchain_8cpp" startline="338" endline="357">vpr::SwapchainImpl::setupImageViews</referencedby>
        <referencedby refid="classvpr_1_1_shader_module_1ae830f1030e0c7d5da745836cd976951f" compoundref="_shader_module_8cpp" startline="36" endline="55">vpr::ShaderModule::ShaderModule</referencedby>
        <referencedby refid="classvpr_1_1_pipeline_cache_1a4a492a5e4baa390c5c1ff6d137b74ea9" compoundref="_pipeline_cache_8cpp" startline="52" endline="66">vpr::PipelineCache::~PipelineCache</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vk_assert_8hpp_1ae69ba6233e866a87c7427b71d4be0563" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vkErrCheck</definition>
        <argsstring>(VkResult res, const char *file, unsigned line, bool abort=true)</argsstring>
        <name>vkErrCheck</name>
        <param>
          <type>VkResult</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>abort</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/vkAssert.hpp" line="11" column="1" bodyfile="common/vkAssert.hpp" bodystart="11" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="common/vkAssert.hpp"/>
  </compounddef>
</doxygen>
