<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="deprecated" kind="page">
    <compoundname>deprecated</compoundname>
    <title>Deprecated List</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="deprecated_1_deprecated000001"/>Class <ref refid="classvpr_1_1_buffer" kindref="compound">vpr::Buffer</ref>  </term></varlistentry>
<listitem><para>{No longer recommended for use: unmaintained and not updated. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000002"/>Member <ref refid="classvpr_1_1_buffer_1a3a369873112eb478f3dfdf7b1549d2f6" kindref="member">vpr::Buffer::CopyTo</ref>  (const void *data, <ref refid="classvpr_1_1_command_pool" kindref="compound">CommandPool</ref> *cmd_pool, const VkQueue &amp;transfer_queue, const VkDeviceSize &amp;size, const VkDeviceSize &amp;offset)</term></varlistentry>
<listitem><para>Use the other CopyTo method that accepts a command buffer instead of this one: using a single command buffer submission like this method does is wasteful, and is not as safe as the other method: if that method is used with a TransferPool, the transfer is guarded with a VkFence (and this method is not). Additionally, the TransferPool class is thread-safe and protects access to its queue and command pool.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000003"/>Class <ref refid="classvpr_1_1_image" kindref="compound">vpr::Image</ref>  </term></varlistentry>
<listitem><para>{No longer recommended for use: unmaintained and not updated.</para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
